{"ast":null,"code":"import { ChangeDetectorRef } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport let CodeblockComponent = /*#__PURE__*/(() => {\n  var _class;\n  class CodeblockComponent {\n    constructor(_changeDetectorRef) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this.languageClass = {};\n    }\n    ngAfterViewInit() {\n      if (this.src[0] === \"\\n\") {\n        this.src = this.src.replace(\"\\n\", \"\");\n      }\n      this.languageClass[`language-${this.language}`] = true;\n      this.html = Prism.highlight(this.src || \"\", Prism.languages[this.language]);\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n  _class = CodeblockComponent;\n  _class.ɵfac = function CodeblockComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"demo-codeblock\"]],\n    inputs: {\n      language: \"language\",\n      src: \"src\"\n    },\n    decls: 1,\n    vars: 2,\n    consts: [[3, \"ngClass\", \"innerHTML\"]],\n    template: function CodeblockComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"pre\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.languageClass)(\"innerHTML\", ctx.html, i0.ɵɵsanitizeHtml);\n      }\n    }\n  });\n  return CodeblockComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}