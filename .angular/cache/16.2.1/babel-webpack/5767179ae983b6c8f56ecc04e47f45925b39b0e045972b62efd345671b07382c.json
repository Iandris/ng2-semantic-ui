{"ast":null,"code":"import { Transition, TransitionDirection, TransitionController } from \"ng2-semantic-ui\";\nimport * as i0 from \"@angular/core\";\nfunction TransitionExampleStandard_sui_select_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sui-select-option\", 6);\n  }\n  if (rf & 2) {\n    const a_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", a_r2);\n  }\n}\nconst exampleStandardTemplate = `\n<div class=\"ui segment\">\n    <img src=\"https://goo.gl/VUcnwx\" class=\"ui image\" [suiTransition]=\"transitionController\">\n</div>\n<sui-select class=\"selection\" [(ngModel)]=\"transitionName\" [options]=\"transitions\" [isSearchable]=\"true\" #animSelect>\n    <sui-select-option *ngFor=\"let a of animSelect.availableOptions\" [value]=\"a\"></sui-select-option>\n</sui-select>\n<button class=\"ui button\" (click)=\"animate(transitionName)\">Animate</button>\n`;\nexport let TransitionPage = /*#__PURE__*/(() => {\n  var _class;\n  class TransitionPage {\n    constructor() {\n      this.api = [{\n        selector: \"[suiTransition]\",\n        properties: [{\n          name: \"suiTransition\",\n          type: \"TransitionController\",\n          description: \"Sets the transition controller.\",\n          required: true\n        }]\n      }];\n      this.transitionControllerCode = `\nimport {TransitionController} from \"ng2-semantic-ui\";\n\n@Component({})\nexport class MyComponent {\n    public transitionController = new TransitionController();\n}\n`;\n      this.transitionElementCode = `\n<div class=\"ui segment\">\n    <img src=\"https://goo.gl/VUcnwx\" class=\"ui image\" [suiTransition]=\"transitionController\">\n</div>\n`;\n      this.transitionExampleCode = `\nimport {TransitionController, Transition, TransitionDirection} from \"ng2-semantic-ui\";\n\n@Component({})\nexport class MyComponent {\n    public transitionController = new TransitionController();\n    \n    public animate(transitionName:string = \"scale\") {\n        this.transitionController.animate(\n            new Transition(transitionName, 500, TransitionDirection.In, () => console.log(\"Completed transition.\")));\n    }\n}\n`;\n      this.exampleStandardTemplate = exampleStandardTemplate;\n      this.transitionControllerInterface = `\nthis.ctrl = new TransitionController(isInitiallyVisible:boolean = false, display:string = \"block\");\n// isInitiallyVisible sets whether the element being animated starts off visible.\n// display sets the 'display' style set on the animated element when it is visible.\n\nthis.ctrl.animate(transition:Transition);\n// Adds a transition to the queue.\n\n/* Example */\nconst t = new Transition(\n    name:string, // Name of the transition. See the above select for the available options.\n    duration:number = 250, // Duration of the transition in milliseconds.\n    direction:TransitionDirection = TransitionDirection.Either, // Transition direction (In, Out, Either, Static).\n    onComplete:(() => void) = () => {}) // Callback function run when the transition has completed.\n\nthis.ctrl.animate(t);\n\nthis.ctrl.stop(transition?:Transition);\n// Stops the current or provided transition, but continues with the queued transitions.\n\nthis.ctrl.stopAll();\n// Stops the current transition, and empties the queue.\n\nthis.ctrl.clearQueue();\n// Continues with the current transition, but empties the queue.\n`;\n      this.advancedExampleCode = `\nimport {SuiTransition, TransitionController, Transition} from \"ng2-semantic-ui\";\n\n@Component({})\nexport class MyComponent extends SuiTransition {\n    private _transitionController:TransitionController;\n\n    constructor(renderer:Renderer2, element:ElementRef, changeDetector:ChangeDetectorRef) {\n        super(renderer, element, changeDetector);\n\n        this._transitionController = new TransitionController(false);\n        this.setTransitionController(this._transitionController);\n        // setTransitionController is a method inherited from SuiTransition.\n    }\n\n    public exampleMethod() {\n        // You can now animate the host element using the transition controller:\n        this._transitionController.animate(new Transition(...));\n    }\n}\n`;\n    }\n  }\n  _class = TransitionPage;\n  _class.ɵfac = function TransitionPage_Factory(t) {\n    return new (t || _class)();\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"demo-page-transition\"]],\n    decls: 47,\n    vars: 7,\n    consts: [[\"header\", \"\"], [\"sub-header\", \"\"], [1, \"ui\", \"dividing\", \"header\"], [1, \"ui\", \"segment\"], [\"language\", \"typescript\", 3, \"src\"], [\"language\", \"markup\", 3, \"src\"], [3, \"code\"], [\"info\", \"\"], [\"result\", \"\"], [1, \"ui\", \"header\"], [\"id\", \"api\", 1, \"ui\", \"dividing\", \"header\"], [3, \"api\"]],\n    template: function TransitionPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"demo-page-title\")(1, \"div\", 0);\n        i0.ɵɵtext(2, \"Transition\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"p\");\n        i0.ɵɵtext(5, \"A transition is an animation usually used to move content in or out of view\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"demo-page-content\")(7, \"h2\", 2);\n        i0.ɵɵtext(8, \"Examples\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10, \"The transition component requires a few things to get it running. Firstly, in your component, create a transition controller:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 3);\n        i0.ɵɵelement(12, \"demo-codeblock\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14, \"Next you add the markup for the element you would like to animate, linking the \");\n        i0.ɵɵelementStart(15, \"code\");\n        i0.ɵɵtext(16, \"[suiTransition]\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(17, \" with the previously defined transition controller, like so:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 3);\n        i0.ɵɵelement(19, \"demo-codeblock\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"p\");\n        i0.ɵɵtext(21, \"Finally, you can use the transition controller to animate the element:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 3);\n        i0.ɵɵelement(23, \"demo-codeblock\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"demo-example\", 6)(25, \"div\", 7)(26, \"p\");\n        i0.ɵɵtext(27, \"Here is the above code in action:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(28, \"example-transition-standard\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"h4\", 9);\n        i0.ɵɵtext(30, \"Transition Controller Interface\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"p\");\n        i0.ɵɵtext(32, \"The full controller interface is explained below, with examples:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 3);\n        i0.ɵɵelement(34, \"demo-codeblock\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"h4\", 9);\n        i0.ɵɵtext(36, \"Advanced Usage\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"p\");\n        i0.ɵɵtext(38, \"A situation may arise in which you are creating a component that requires transitions, but the host element is what needs to be controlled. In this case, you must inherit the \");\n        i0.ɵɵelementStart(39, \"code\");\n        i0.ɵɵtext(40, \"SuiTransition\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(41, \" class, in the following way:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 3);\n        i0.ɵɵelement(43, \"demo-codeblock\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"h2\", 10);\n        i0.ɵɵtext(45, \"API\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(46, \"demo-api\", 11);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"src\", ctx.transitionControllerCode);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"src\", ctx.transitionElementCode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"src\", ctx.transitionExampleCode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"code\", ctx.exampleStandardTemplate);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"src\", ctx.transitionControllerInterface);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"src\", ctx.advancedExampleCode);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"api\", ctx.api);\n      }\n    },\n    encapsulation: 2\n  });\n  return TransitionPage;\n})();\nexport let TransitionExampleStandard = /*#__PURE__*/(() => {\n  var _class2;\n  class TransitionExampleStandard {\n    constructor() {\n      this.transitionController = new TransitionController();\n      this.transitions = [\"scale\", \"fade\", \"fade up\", \"fade down\", \"fade left\", \"fade right\", \"horizontal flip\", \"vertical flip\", \"drop\", \"fly left\", \"fly right\", \"fly up\", \"fly down\", \"swing left\", \"swing right\", \"swing up\", \"swing down\", \"browse\", \"browse right\", \"slide left\", \"slide right\", \"slide up\", \"slide down\", \"jiggle\", \"flash\", \"shake\", \"pulse\", \"tada\", \"bounce\"];\n      this.transitionName = \"scale\";\n    }\n    animate(transitionName = \"scale\") {\n      this.transitionController.animate(new Transition(transitionName, 500, TransitionDirection.Either, () => console.log(\"Completed transition.\")));\n    }\n  }\n  _class2 = TransitionExampleStandard;\n  _class2.ɵfac = function TransitionExampleStandard_Factory(t) {\n    return new (t || _class2)();\n  };\n  _class2.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class2,\n    selectors: [[\"example-transition-standard\"]],\n    decls: 7,\n    vars: 5,\n    consts: [[1, \"ui\", \"segment\"], [\"src\", \"https://goo.gl/VUcnwx\", 1, \"ui\", \"image\", 3, \"suiTransition\"], [1, \"selection\", 3, \"ngModel\", \"options\", \"isSearchable\", \"ngModelChange\"], [\"animSelect\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"ui\", \"button\", 3, \"click\"], [3, \"value\"]],\n    template: function TransitionExampleStandard_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"sui-select\", 2, 3);\n        i0.ɵɵlistener(\"ngModelChange\", function TransitionExampleStandard_Template_sui_select_ngModelChange_2_listener($event) {\n          return ctx.transitionName = $event;\n        });\n        i0.ɵɵtemplate(4, TransitionExampleStandard_sui_select_option_4_Template, 1, 1, \"sui-select-option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function TransitionExampleStandard_Template_button_click_5_listener() {\n          return ctx.animate(ctx.transitionName);\n        });\n        i0.ɵɵtext(6, \"Animate\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"suiTransition\", ctx.transitionController);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.transitionName)(\"options\", ctx.transitions)(\"isSearchable\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", _r0.availableOptions);\n      }\n    },\n    encapsulation: 2\n  });\n  return TransitionExampleStandard;\n})();\nexport const TransitionPageComponents = [TransitionPage, TransitionExampleStandard];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}