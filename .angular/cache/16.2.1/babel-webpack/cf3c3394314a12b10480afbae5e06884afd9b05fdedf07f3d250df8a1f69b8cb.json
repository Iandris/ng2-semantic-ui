{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst exampleStandardTemplate = `\n<div class=\"ui segments\">\n    <div class=\"ui segment\">\n        <sui-pagination [collectionSize]=\"100\"\n                        [pageSize]=\"10\"\n                        [hasNavigationLinks]=\"navigation\"\n                        [hasBoundaryLinks]=\"boundary\"\n                        [(page)]=\"selectedPage\">\n        </sui-pagination>\n    </div>\n    <div class=\"ui segment\">\n        <p>Current page: {{ selectedPage }}</p>\n        <div class=\"ui small form\">\n            <div class=\"field\">\n                <sui-checkbox [(ngModel)]=\"navigation\">Navigation Links?</sui-checkbox>    \n            </div>\n            <div class=\"field\">\n                <sui-checkbox [(ngModel)]=\"boundary\">Boundary Links?</sui-checkbox>\n            </div>\n        </div>\n    </div>\n</div>\n`;\nconst exampleMaxSizeTemplate = `\n<div class=\"ui segments\">\n    <div class=\"ui segment\">\n        <sui-pagination [collectionSize]=\"100\"\n                        [pageSize]=\"10\"\n                        [maxSize]=\"maxSize\"\n                        [hasEllipses]=\"ellipses\"\n                        [(page)]=\"selectedPage\">\n        </sui-pagination>\n    </div>\n    <div class=\"ui segment\">\n        <p>Current page: {{ selectedPage }}</p>\n        <div class=\"ui small form\">\n            <div class=\"field\">\n                <sui-checkbox [(ngModel)]=\"ellipses\">Ellipses?</sui-checkbox>    \n            </div>\n            <div class=\"field\">\n                <label>Max Size</label>\n                <input type=\"number\" [(ngModel)]=maxSize>\n            </div>\n        </div>\n    </div>\n</div>\n`;\nconst exampleRotationTemplate = `\n<div class=\"ui segments\">\n    <div class=\"ui segment\">\n        <sui-pagination [collectionSize]=\"100\"\n                        [pageSize]=\"10\"\n                        [maxSize]=\"maxSize\"\n                        [hasEllipses]=\"ellipses\"\n                        [canRotate]=\"true\"\n                        [(page)]=\"selectedPage\">\n        </sui-pagination>\n    </div>\n    <div class=\"ui segment\">\n        <p>Current page: {{ selectedPage }}</p>\n        <div class=\"ui small form\">\n            <div class=\"field\">\n                <sui-checkbox [(ngModel)]=\"ellipses\">Ellipses?</sui-checkbox>    \n            </div>\n            <div class=\"field\">\n                <label>Max Size</label>\n                <input type=\"number\" [(ngModel)]=maxSize>\n            </div>\n        </div>\n    </div>\n</div>\n`;\nexport let PaginationPage = /*#__PURE__*/(() => {\n  var _class;\n  class PaginationPage {\n    constructor() {\n      this.api = [{\n        selector: \"<sui-pagination>\",\n        properties: [{\n          name: \"collectionSize\",\n          type: \"number\",\n          description: \"Sets the number of items in the collection.\",\n          required: true\n        }, {\n          name: \"maxSize\",\n          type: \"number\",\n          description: \"Sets the maximum number of pages shown (boundary, navigation & ellipses excluded).\"\n        }, {\n          name: \"hasBoundaryLinks\",\n          type: \"boolean\",\n          description: \"Whether to show the boundary links (<code><<</code> and <code>>></code>).\",\n          defaultValue: \"false\"\n        }, {\n          name: \"hasNavigationLinks\",\n          type: \"boolean\",\n          description: \"Whether to show the navigation links (<code><</code> and <code>></code>). \" + \"Forced to be displayed when <code>maxSize > pageCount</code>.\",\n          defaultValue: \"true\"\n        }, {\n          name: \"hasEllipses\",\n          type: \"boolean\",\n          description: \"Whether to show ellipsis symbols & first/last page numbers when <code>maxSize > pageCount</code>.\",\n          defaultValue: \"true\"\n        }, {\n          name: \"canRotate\",\n          type: \"boolean\",\n          description: \"Whether to rotate pages when <code>maxSize > pageCount</code>. \" + \"Current page will be in the middle.\",\n          defaultValue: \"false\"\n        }, {\n          name: \"page\",\n          type: \"number\",\n          description: \"Sets the current page.\",\n          defaultValue: \"1\"\n        }, {\n          name: \"pageSize\",\n          type: \"number\",\n          description: \"Sets the number of items in each page.\",\n          defaultValue: \"10\"\n        }],\n        events: [{\n          name: \"pageChange\",\n          type: \"number\",\n          description: \"Fires whenever the current page is changed. <code>[(page)]</code> syntax is supported.\"\n        }]\n      }];\n      this.exampleStandardTemplate = exampleStandardTemplate;\n      this.exampleMaxSizeTemplate = exampleMaxSizeTemplate;\n      this.exampleRotationTemplate = exampleRotationTemplate;\n    }\n  }\n  _class = PaginationPage;\n  _class.ɵfac = function PaginationPage_Factory(t) {\n    return new (t || _class)();\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"demo-page-pagination\"]],\n    decls: 33,\n    vars: 4,\n    consts: [[\"header\", \"\"], [\"sub-header\", \"\"], [1, \"ui\", \"dividing\", \"header\"], [3, \"code\"], [\"info\", \"\"], [1, \"ui\", \"header\"], [\"result\", \"\"], [\"id\", \"api\", 1, \"ui\", \"dividing\", \"header\"], [3, \"api\"]],\n    template: function PaginationPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"demo-page-title\")(1, \"div\", 0);\n        i0.ɵɵtext(2, \"Pagination\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"p\");\n        i0.ɵɵtext(5, \"A pagination displays navigation buttons for browsing through a collection\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"demo-page-content\")(7, \"h2\", 2);\n        i0.ɵɵtext(8, \"Examples\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"demo-example\", 3)(10, \"div\", 4)(11, \"h4\", 5);\n        i0.ɵɵtext(12, \"Standard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14, \"A standard pagination\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(15, \"example-pagination-standard\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"demo-example\", 3)(17, \"div\", 4)(18, \"h4\", 5);\n        i0.ɵɵtext(19, \"With Max Size\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"p\");\n        i0.ɵɵtext(21, \"A pagination with maxSize set\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(22, \"example-pagination-maxsize\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"demo-example\", 3)(24, \"div\", 4)(25, \"h4\", 5);\n        i0.ɵɵtext(26, \"Rotation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"p\");\n        i0.ɵɵtext(28, \"A pagination with maxSize set and rotation enabled\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(29, \"example-pagination-rotation\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"h2\", 7);\n        i0.ɵɵtext(31, \"API\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"demo-api\", 8);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"code\", ctx.exampleStandardTemplate);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"code\", ctx.exampleMaxSizeTemplate);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"code\", ctx.exampleRotationTemplate);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"api\", ctx.api);\n      }\n    },\n    encapsulation: 2\n  });\n  return PaginationPage;\n})();\nexport let PaginationExampleStandard = /*#__PURE__*/(() => {\n  var _class2;\n  class PaginationExampleStandard {\n    constructor() {}\n    ngOnInit() {\n      this.selectedPage = 1;\n      this.navigation = true;\n      this.boundary = false;\n    }\n  }\n  _class2 = PaginationExampleStandard;\n  _class2.ɵfac = function PaginationExampleStandard_Factory(t) {\n    return new (t || _class2)();\n  };\n  _class2.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class2,\n    selectors: [[\"example-pagination-standard\"]],\n    decls: 13,\n    vars: 8,\n    consts: [[1, \"ui\", \"segments\"], [1, \"ui\", \"segment\"], [3, \"collectionSize\", \"pageSize\", \"hasNavigationLinks\", \"hasBoundaryLinks\", \"page\", \"pageChange\"], [1, \"ui\", \"small\", \"form\"], [1, \"field\"], [3, \"ngModel\", \"ngModelChange\"]],\n    template: function PaginationExampleStandard_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"sui-pagination\", 2);\n        i0.ɵɵlistener(\"pageChange\", function PaginationExampleStandard_Template_sui_pagination_pageChange_2_listener($event) {\n          return ctx.selectedPage = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"p\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"div\", 4)(8, \"sui-checkbox\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function PaginationExampleStandard_Template_sui_checkbox_ngModelChange_8_listener($event) {\n          return ctx.navigation = $event;\n        });\n        i0.ɵɵtext(9, \"Navigation Links?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"sui-checkbox\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function PaginationExampleStandard_Template_sui_checkbox_ngModelChange_11_listener($event) {\n          return ctx.boundary = $event;\n        });\n        i0.ɵɵtext(12, \"Boundary Links?\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"collectionSize\", 100)(\"pageSize\", 10)(\"hasNavigationLinks\", ctx.navigation)(\"hasBoundaryLinks\", ctx.boundary)(\"page\", ctx.selectedPage);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Current page: \", ctx.selectedPage, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.navigation);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.boundary);\n      }\n    },\n    encapsulation: 2\n  });\n  return PaginationExampleStandard;\n})();\nexport let PaginationExampleMaxSize = /*#__PURE__*/(() => {\n  var _class3;\n  class PaginationExampleMaxSize {\n    constructor() {}\n    ngOnInit() {\n      this.selectedPage = 1;\n      this.ellipses = true;\n      this.maxSize = 5;\n    }\n  }\n  _class3 = PaginationExampleMaxSize;\n  _class3.ɵfac = function PaginationExampleMaxSize_Factory(t) {\n    return new (t || _class3)();\n  };\n  _class3.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class3,\n    selectors: [[\"example-pagination-maxsize\"]],\n    decls: 14,\n    vars: 8,\n    consts: [[1, \"ui\", \"segments\"], [1, \"ui\", \"segment\"], [3, \"collectionSize\", \"pageSize\", \"maxSize\", \"hasEllipses\", \"page\", \"pageChange\"], [1, \"ui\", \"small\", \"form\"], [1, \"field\"], [3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function PaginationExampleMaxSize_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"sui-pagination\", 2);\n        i0.ɵɵlistener(\"pageChange\", function PaginationExampleMaxSize_Template_sui_pagination_pageChange_2_listener($event) {\n          return ctx.selectedPage = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"p\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"div\", 4)(8, \"sui-checkbox\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function PaginationExampleMaxSize_Template_sui_checkbox_ngModelChange_8_listener($event) {\n          return ctx.ellipses = $event;\n        });\n        i0.ɵɵtext(9, \"Ellipses?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\");\n        i0.ɵɵtext(12, \"Max Size\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function PaginationExampleMaxSize_Template_input_ngModelChange_13_listener($event) {\n          return ctx.maxSize = $event;\n        });\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"collectionSize\", 100)(\"pageSize\", 10)(\"maxSize\", ctx.maxSize)(\"hasEllipses\", ctx.ellipses)(\"page\", ctx.selectedPage);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Current page: \", ctx.selectedPage, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.ellipses);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.maxSize);\n      }\n    },\n    encapsulation: 2\n  });\n  return PaginationExampleMaxSize;\n})();\nexport let PaginationExampleRotation = /*#__PURE__*/(() => {\n  var _class4;\n  class PaginationExampleRotation {\n    constructor() {}\n    ngOnInit() {\n      this.selectedPage = 1;\n      this.ellipses = false;\n      this.maxSize = 5;\n    }\n  }\n  _class4 = PaginationExampleRotation;\n  _class4.ɵfac = function PaginationExampleRotation_Factory(t) {\n    return new (t || _class4)();\n  };\n  _class4.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class4,\n    selectors: [[\"example-pagination-rotation\"]],\n    decls: 14,\n    vars: 9,\n    consts: [[1, \"ui\", \"segments\"], [1, \"ui\", \"segment\"], [3, \"collectionSize\", \"pageSize\", \"maxSize\", \"hasEllipses\", \"canRotate\", \"page\", \"pageChange\"], [1, \"ui\", \"small\", \"form\"], [1, \"field\"], [3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function PaginationExampleRotation_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"sui-pagination\", 2);\n        i0.ɵɵlistener(\"pageChange\", function PaginationExampleRotation_Template_sui_pagination_pageChange_2_listener($event) {\n          return ctx.selectedPage = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"p\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"div\", 4)(8, \"sui-checkbox\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function PaginationExampleRotation_Template_sui_checkbox_ngModelChange_8_listener($event) {\n          return ctx.ellipses = $event;\n        });\n        i0.ɵɵtext(9, \"Ellipses?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\");\n        i0.ɵɵtext(12, \"Max Size\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function PaginationExampleRotation_Template_input_ngModelChange_13_listener($event) {\n          return ctx.maxSize = $event;\n        });\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"collectionSize\", 100)(\"pageSize\", 10)(\"maxSize\", ctx.maxSize)(\"hasEllipses\", ctx.ellipses)(\"canRotate\", true)(\"page\", ctx.selectedPage);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Current page: \", ctx.selectedPage, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.ellipses);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.maxSize);\n      }\n    },\n    encapsulation: 2\n  });\n  return PaginationExampleRotation;\n})();\nexport const PaginationPageComponents = [PaginationPage, PaginationExampleStandard, PaginationExampleMaxSize, PaginationExampleRotation];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}