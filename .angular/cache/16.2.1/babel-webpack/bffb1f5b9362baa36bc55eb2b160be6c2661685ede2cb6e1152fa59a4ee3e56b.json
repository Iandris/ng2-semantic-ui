{"ast":null,"code":"import { DatepickerMode } from \"ng2-semantic-ui\";\nimport * as i0 from \"@angular/core\";\nfunction DatepickerExampleStandard_sui_select_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sui-select-option\", 9);\n  }\n  if (rf & 2) {\n    const m_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", m_r2);\n  }\n}\nconst exampleStandardTemplate = `\n<div class=\"ui form\">\n    <div class=\"field\">\n        <label>Date</label>\n        <div class=\"ui left icon input\">\n            <i class=\"calendar icon\"></i>\n            <input suiDatepicker\n                   [(ngModel)]=\"date\"\n                   [pickerMode]=\"mode\"\n                   [pickerFirstDayOfWeek]=\"firstDayOfWeek\"\n                   [pickerUseNativeOnMobile]=\"false\">\n        </div>\n    </div>\n    <div class=\"field\">\n        <label>Datepicker Mode</label>\n        <sui-select class=\"selection\" [(ngModel)]=\"mode\" [options]=\"datepickerModes\" #modes>\n            <sui-select-option *ngFor=\"let m of modes.availableOptions\" [value]=\"m\"></sui-select-option>\n        </sui-select>\n    </div>\n    <div class=\"field\">\n        <label>First Day of the Week</label>\n        <input type=\"number\" [(ngModel)]=\"firstDayOfWeek\" min=\"0\" max=\"6\">\n    </div>\n    <p>Selected Date: {{ date }}</p>\n</div>\n`;\nconst exampleButtonTemplate = `\n<button class=\"ui button\" suiDatepicker>Select Date</button>\n`;\nconst exampleMinMaxTemplate = `\n<div class=\"ui form\">\n    <div class=\"field\">\n        <label>Min Date</label>\n        <div class=\"ui left icon input\">\n            <i class=\"calendar icon\"></i>\n            <input suiDatepicker [(ngModel)]=\"min\" [pickerUseNativeOnMobile]=\"false\">\n        </div>\n    </div>\n    <div class=\"field\">\n        <label>Max Date</label>\n        <div class=\"ui left icon input\">\n            <i class=\"calendar icon\"></i>\n            <input suiDatepicker [(ngModel)]=\"max\" [pickerUseNativeOnMobile]=\"false\">\n        </div>\n    </div>\n    <div class=\"field\">\n        <label>Constrained Date</label>\n        <div class=\"ui left icon input\">\n            <i class=\"calendar icon\"></i>\n            <input suiDatepicker\n                   [pickerMinDate]=\"min\"\n                   [pickerMaxDate]=\"max\"\n                   [pickerUseNativeOnMobile]=\"false\">\n        </div>\n    </div>\n</div>\n`;\nconst exampleMobileFallbackTemplate = `\n<div class=\"ui fluid action input\">\n    <input placeholder=\"Select date...\"\n           suiDatepicker\n           [(ngModel)]=\"date\"\n           [pickerUseNativeOnMobile]=\"true\">\n\n    <button class=\"ui primary icon button\" (click)=\"today()\">\n      <i class=\"checked calendar icon\"></i>\n    </button>\n    <button class=\"ui secondary icon button\" (click)=\"unset()\">\n      <i class=\"remove icon\"></i>\n    </button>\n</div>\n`;\nexport let DatepickerPage = /*#__PURE__*/(() => {\n  var _class;\n  class DatepickerPage {\n    constructor() {\n      this.api = [{\n        selector: \"[suiDatepicker]\",\n        properties: [{\n          name: \"pickerMode\",\n          type: \"DatepickerMode\",\n          description: \"Specifies the mode for the datepicker. Options are: <code>datetime</code>, \" + \"<code>date</code>, <code>time</code>, <code>month</code> & <code>year</code>.\",\n          defaultValue: \"datetime\"\n        }, {\n          name: \"pickerInitialDate\",\n          type: \"Date\",\n          description: \"Sets the intial date to display when no date is selected.\",\n          defaultValue: \"new Date()\"\n        }, {\n          name: \"pickerMaxDate\",\n          type: \"Date\",\n          description: \"Sets the maximum date that can be selected by the datepicker.\"\n        }, {\n          name: \"pickerMinDate\",\n          type: \"Date\",\n          description: \"Sets the minimum date that can be selected by the datepicker.\"\n        }, {\n          name: \"pickerFirstDayOfWeek\",\n          type: \"number\",\n          description: \"Sets the first day of the week when displaying dates in a month. \" + \"Can be from <code>0</code> (Sunday) to <code>6</code> (Saturday).\",\n          defaultValue: \"0\"\n        }, {\n          name: \"pickerPlacement\",\n          type: \"PopupPlacement\",\n          description: \"Sets the placement of the datepicker.\",\n          defaultValue: \"bottom left\"\n        }, {\n          name: \"pickerTransition\",\n          type: \"string\",\n          description: \"Sets the transition used when displaying the datepicker.\",\n          defaultValue: \"scale\"\n        }, {\n          name: \"pickerTransitionDuration\",\n          type: \"number\",\n          description: \"Sets the duration for the datepicker transition.\",\n          defaultValue: \"200\"\n        }, {\n          name: \"pickerLocaleOverrides\",\n          type: \"Partial<IDatepickerLocaleValues>\",\n          description: \"Overrides the values from the localization service.\"\n        }, {\n          name: \"ngModel\",\n          type: \"Date\",\n          description: \"Bind the selected date to the value of the provided variable.\"\n        }],\n        events: [{\n          name: \"pickerSelectedDateChange\",\n          type: \"Date\",\n          description: \"Fires whenever the selected date is changed. The selected date is passed as <code>$event</code>.\"\n        }, {\n          name: \"ngModelChange\",\n          type: \"Date\",\n          description: \"Fires whenever the selected date is changed. <code>[(ngModel)]</code> syntax is supported.\"\n        }]\n      }, {\n        selector: \"input[suiDatepicker]\",\n        properties: [{\n          name: \"pickerUseNativeOnMobile\",\n          type: \"boolean\",\n          description: \"Whether the datepicker should use the native HTML5 pickers when on a mobile device.\",\n          defaultValue: \"true\"\n        }]\n      }];\n      this.exampleStandardTemplate = exampleStandardTemplate;\n      this.exampleButtonTemplate = exampleButtonTemplate;\n      this.exampleMinMaxTemplate = exampleMinMaxTemplate;\n      this.exampleMobileFallbackTemplate = exampleMobileFallbackTemplate;\n      this.cssInclude = `<link rel=\"stylesheet\" href=\"https://unpkg.com/semantic-ui-calendar/dist/calendar.min.css\">`;\n    }\n  }\n  _class = DatepickerPage;\n  _class.ɵfac = function DatepickerPage_Factory(t) {\n    return new (t || _class)();\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"demo-page-datepicker\"]],\n    decls: 82,\n    vars: 9,\n    consts: [[\"header\", \"\"], [\"sub-header\", \"\"], [1, \"info\", 3, \"isDismissable\"], [1, \"header\"], [\"href\", \"https://github.com/mdehoog/Semantic-UI-Calendar\"], [1, \"ui\", \"segment\"], [\"language\", \"markup\", 3, \"src\"], [\"href\", \"https://github.com/mdehoog/Semantic-UI-Calendar#compiling-css-from-less\"], [1, \"ui\", \"dividing\", \"header\"], [3, \"code\"], [\"info\", \"\"], [1, \"ui\", \"header\"], [\"result\", \"\"], [\"routerLink\", \"/behaviors/localization\"], [\"id\", \"api\", 1, \"ui\", \"dividing\", \"header\"], [3, \"api\"]],\n    template: function DatepickerPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"demo-page-title\")(1, \"div\", 0);\n        i0.ɵɵtext(2, \"Datepicker\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"p\");\n        i0.ɵɵtext(5, \"A datepicker provides an interface for selecting a date and time\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"demo-page-content\")(7, \"sui-message\", 2)(8, \"div\", 3);\n        i0.ɵɵtext(9, \"Important Note\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\");\n        i0.ɵɵtext(11, \" The datepicker is a port of \");\n        i0.ɵɵelementStart(12, \"a\", 4);\n        i0.ɵɵtext(13, \"Semantic-UI-Calendar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(14, \", an external module for Semantic UI. If you'd like to use the datepicker in your app, you must include the module's CSS alongside Semantic UI's. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\");\n        i0.ɵɵtext(16, \"If you're not customizing the default theme, add the CSS as a link tag to your page:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 5);\n        i0.ɵɵelement(18, \"demo-codeblock\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\");\n        i0.ɵɵtext(20, \"Otherwise, follow the \");\n        i0.ɵɵelementStart(21, \"a\", 7);\n        i0.ɵɵtext(22, \"Compilation Instructions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(23, \". \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"h2\", 8);\n        i0.ɵɵtext(25, \"Examples\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"demo-example\", 9)(27, \"div\", 10)(28, \"h4\", 11);\n        i0.ɵɵtext(29, \"Datepicker\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"p\");\n        i0.ɵɵtext(31, \"A datepicker supports a number of picking modes\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(32, \"example-datepicker-standard\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"demo-example\", 9)(34, \"div\", 10)(35, \"h4\", 11);\n        i0.ɵɵtext(36, \"Button\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"p\");\n        i0.ɵɵtext(38, \"A datepicker can be attached to any focusable element\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(39, \"example-datepicker-button\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"demo-example\", 9)(41, \"div\", 10)(42, \"h4\", 11);\n        i0.ɵɵtext(43, \"Min & Max\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"p\");\n        i0.ɵɵtext(45, \" A datepicker can be limited to a certain date range. When using reactive forms, validation errors are generated automatically \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(46, \"example-datepicker-min-max\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"sui-message\", 2)(48, \"div\", 3);\n        i0.ɵɵtext(49, \"Timezones\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"p\");\n        i0.ɵɵtext(51, \" The datepicker will always return a \");\n        i0.ɵɵelementStart(52, \"code\");\n        i0.ɵɵtext(53, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(54, \" object in the local timezone. When in modes that don't include a time, the time will always be set to midnight. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(55, \"br\");\n        i0.ɵɵelementStart(56, \"demo-example\", 9)(57, \"div\", 10)(58, \"h4\", 11);\n        i0.ɵɵtext(59, \"Mobile Fallback\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"p\");\n        i0.ɵɵtext(61, \"A datepicker can be configured to fallback to the native browser UI on mobile (this is the default behavior)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"p\");\n        i0.ɵɵtext(63, \"Note that the \");\n        i0.ɵɵelementStart(64, \"code\");\n        i0.ɵɵtext(65, \"[pickerUseNativeOnMobile]\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(66, \" property only exists on datepickers attached to \");\n        i0.ɵɵelementStart(67, \"code\");\n        i0.ɵɵtext(68, \"input\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(69, \" elements.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(70, \"example-datepicker-mobile-fallback\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(71, \"sui-message\", 2)(72, \"div\", 3);\n        i0.ɵɵtext(73, \"Localization\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"p\");\n        i0.ɵɵtext(75, \" The datepicker has full localization support. Read the \");\n        i0.ɵɵelementStart(76, \"a\", 13);\n        i0.ɵɵtext(77, \"localization docs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(78, \" for guidance. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(79, \"h2\", 14);\n        i0.ɵɵtext(80, \"API\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(81, \"demo-api\", 15);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"isDismissable\", false);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"src\", ctx.cssInclude);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"code\", ctx.exampleStandardTemplate);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"code\", ctx.exampleButtonTemplate);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"code\", ctx.exampleMinMaxTemplate);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"isDismissable\", false);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"code\", ctx.exampleMobileFallbackTemplate);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"isDismissable\", false);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"api\", ctx.api);\n      }\n    },\n    encapsulation: 2\n  });\n  return DatepickerPage;\n})();\nexport let DatepickerExampleStandard = /*#__PURE__*/(() => {\n  var _class2;\n  class DatepickerExampleStandard {\n    constructor() {\n      this.firstDayOfWeek = 1;\n      this.datepickerModes = [\"datetime\", \"date\", \"time\", \"month\", \"year\"];\n      this.mode = DatepickerMode.Datetime;\n    }\n  }\n  _class2 = DatepickerExampleStandard;\n  _class2.ɵfac = function DatepickerExampleStandard_Factory(t) {\n    return new (t || _class2)();\n  };\n  _class2.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class2,\n    selectors: [[\"example-datepicker-standard\"]],\n    decls: 19,\n    vars: 9,\n    consts: [[1, \"ui\", \"form\"], [1, \"field\"], [1, \"ui\", \"left\", \"icon\", \"input\"], [1, \"calendar\", \"icon\"], [\"suiDatepicker\", \"\", 3, \"ngModel\", \"pickerMode\", \"pickerFirstDayOfWeek\", \"pickerUseNativeOnMobile\", \"ngModelChange\"], [1, \"selection\", 3, \"ngModel\", \"options\", \"ngModelChange\"], [\"modes\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"number\", \"min\", \"0\", \"max\", \"6\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"]],\n    template: function DatepickerExampleStandard_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\");\n        i0.ɵɵtext(3, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelement(5, \"i\", 3);\n        i0.ɵɵelementStart(6, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function DatepickerExampleStandard_Template_input_ngModelChange_6_listener($event) {\n          return ctx.date = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\");\n        i0.ɵɵtext(9, \"Datepicker Mode\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"sui-select\", 5, 6);\n        i0.ɵɵlistener(\"ngModelChange\", function DatepickerExampleStandard_Template_sui_select_ngModelChange_10_listener($event) {\n          return ctx.mode = $event;\n        });\n        i0.ɵɵtemplate(12, DatepickerExampleStandard_sui_select_option_12_Template, 1, 1, \"sui-select-option\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\");\n        i0.ɵɵtext(15, \"First Day of the Week\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function DatepickerExampleStandard_Template_input_ngModelChange_16_listener($event) {\n          return ctx.firstDayOfWeek = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"p\");\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(11);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.date)(\"pickerMode\", ctx.mode)(\"pickerFirstDayOfWeek\", ctx.firstDayOfWeek)(\"pickerUseNativeOnMobile\", false);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.mode)(\"options\", ctx.datepickerModes);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", _r0.availableOptions);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.firstDayOfWeek);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Selected Date: \", ctx.date, \"\");\n      }\n    },\n    encapsulation: 2\n  });\n  return DatepickerExampleStandard;\n})();\nexport let DatepickerExampleButton = /*#__PURE__*/(() => {\n  var _class3;\n  class DatepickerExampleButton {}\n  _class3 = DatepickerExampleButton;\n  _class3.ɵfac = function DatepickerExampleButton_Factory(t) {\n    return new (t || _class3)();\n  };\n  _class3.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class3,\n    selectors: [[\"example-datepicker-button\"]],\n    decls: 2,\n    vars: 0,\n    consts: [[\"suiDatepicker\", \"\", 1, \"ui\", \"button\"]],\n    template: function DatepickerExampleButton_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵtext(1, \"Select Date\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return DatepickerExampleButton;\n})();\nexport let DatepickerExampleMinMax = /*#__PURE__*/(() => {\n  var _class4;\n  class DatepickerExampleMinMax {\n    constructor() {\n      const today = new Date();\n      this.min = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate() - 4);\n      this.max = new Date(today.getFullYear(), today.getMonth() + 1, today.getDate() + 4);\n    }\n  }\n  _class4 = DatepickerExampleMinMax;\n  _class4.ɵfac = function DatepickerExampleMinMax_Factory(t) {\n    return new (t || _class4)();\n  };\n  _class4.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class4,\n    selectors: [[\"example-datepicker-min-max\"]],\n    decls: 19,\n    vars: 7,\n    consts: [[1, \"ui\", \"form\"], [1, \"field\"], [1, \"ui\", \"left\", \"icon\", \"input\"], [1, \"calendar\", \"icon\"], [\"suiDatepicker\", \"\", 3, \"ngModel\", \"pickerUseNativeOnMobile\", \"ngModelChange\"], [\"suiDatepicker\", \"\", 3, \"pickerMinDate\", \"pickerMaxDate\", \"pickerUseNativeOnMobile\"]],\n    template: function DatepickerExampleMinMax_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\");\n        i0.ɵɵtext(3, \"Min Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelement(5, \"i\", 3);\n        i0.ɵɵelementStart(6, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function DatepickerExampleMinMax_Template_input_ngModelChange_6_listener($event) {\n          return ctx.min = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\");\n        i0.ɵɵtext(9, \"Max Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 2);\n        i0.ɵɵelement(11, \"i\", 3);\n        i0.ɵɵelementStart(12, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function DatepickerExampleMinMax_Template_input_ngModelChange_12_listener($event) {\n          return ctx.max = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\");\n        i0.ɵɵtext(15, \"Constrained Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 2);\n        i0.ɵɵelement(17, \"i\", 3)(18, \"input\", 5);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.min)(\"pickerUseNativeOnMobile\", false);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.max)(\"pickerUseNativeOnMobile\", false);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"pickerMinDate\", ctx.min)(\"pickerMaxDate\", ctx.max)(\"pickerUseNativeOnMobile\", false);\n      }\n    },\n    encapsulation: 2\n  });\n  return DatepickerExampleMinMax;\n})();\nexport let DatepickerExampleMobileFallback = /*#__PURE__*/(() => {\n  var _class5;\n  class DatepickerExampleMobileFallback {\n    constructor() {\n      this.date = new Date();\n    }\n    unset() {\n      this.date = undefined;\n    }\n    today() {\n      this.date = new Date();\n    }\n  }\n  _class5 = DatepickerExampleMobileFallback;\n  _class5.ɵfac = function DatepickerExampleMobileFallback_Factory(t) {\n    return new (t || _class5)();\n  };\n  _class5.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class5,\n    selectors: [[\"example-datepicker-mobile-fallback\"]],\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"ui\", \"fluid\", \"action\", \"input\"], [\"placeholder\", \"Select date...\", \"suiDatepicker\", \"\", 3, \"ngModel\", \"pickerUseNativeOnMobile\", \"ngModelChange\"], [1, \"ui\", \"primary\", \"icon\", \"button\", 3, \"click\"], [1, \"checked\", \"calendar\", \"icon\"], [1, \"ui\", \"secondary\", \"icon\", \"button\", 3, \"click\"], [1, \"remove\", \"icon\"]],\n    template: function DatepickerExampleMobileFallback_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function DatepickerExampleMobileFallback_Template_input_ngModelChange_1_listener($event) {\n          return ctx.date = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function DatepickerExampleMobileFallback_Template_button_click_2_listener() {\n          return ctx.today();\n        });\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function DatepickerExampleMobileFallback_Template_button_click_4_listener() {\n          return ctx.unset();\n        });\n        i0.ɵɵelement(5, \"i\", 5);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.date)(\"pickerUseNativeOnMobile\", true);\n      }\n    },\n    encapsulation: 2\n  });\n  return DatepickerExampleMobileFallback;\n})();\nexport const DatepickerPageComponents = [DatepickerPage, DatepickerExampleStandard, DatepickerExampleButton, DatepickerExampleMinMax, DatepickerExampleMobileFallback];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}