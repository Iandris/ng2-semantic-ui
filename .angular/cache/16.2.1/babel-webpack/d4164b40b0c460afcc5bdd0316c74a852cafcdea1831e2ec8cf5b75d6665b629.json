{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst _c0 = function () {\n  return {\n    example: \"object\"\n  };\n};\nconst exampleStandardTemplate = `\n<div class=\"ui form\">\n    <div class=\"grouped fields\">\n        <label>Checkbox Example</label>\n        <div class=\"field\">\n            <sui-checkbox [(ngModel)]=\"eCheck\" [isDisabled]=\"eCheckDisabled\" [isReadonly]=\"eCheckReadonly\">\n                An example checkbox\n            </sui-checkbox>\n        </div>\n        <div class=\"field\">\n            <sui-checkbox [(ngModel)]=\"eCheckDisabled\">1st checkbox disabled?</sui-checkbox>\n        </div>\n        <div class=\"field\">\n            <sui-checkbox [(ngModel)]=\"eCheckReadonly\">1st checkbox read-only?</sui-checkbox>\n        </div>\n        <div class=\"field\">\n            <sui-checkbox [(ngModel)]=\"eCheck\">Mirrors value of 1st checkbox</sui-checkbox>\n        </div>\n    </div>\n</div>\n`;\nconst exampleRadioButtonTemplate = `\n<div class=\"ui form\">\n    <div class=\"grouped fields\">\n        <label>Radio Button Example</label>\n        <div class=\"field\">\n            <sui-radio-button name=\"example\" value=\"hello\" [(ngModel)]=\"eRadio\">Value: \"hello\"</sui-radio-button>\n        </div>\n        <div class=\"field\">\n            <sui-radio-button name=\"example\" value=\"world\" [(ngModel)]=\"eRadio\">Value: \"world\"</sui-radio-button>\n        </div>\n        <div class=\"field\">\n            <sui-radio-button name=\"example\" value=\"example\" [(ngModel)]=\"eRadio\">Value: \"example\"</sui-radio-button>\n        </div>\n        <div class=\"field\">\n            <sui-radio-button name=\"example\" [value]=\"{ example: 'object' }\" [(ngModel)]=\"eRadio\">\n                Value: {{ '{' }} example: \"object\" }\n            </sui-radio-button>\n        </div>\n    </div>\n</div>\n<p>The currently selected value is {{ eRadio | json }}</p>\n`;\nconst exampleStyledTemplate = `\n<div class=\"ui form\">\n    <div class=\"grouped fields\">\n        <label>Checkbox Style Examples</label>\n        <div class=\"field\">\n            <sui-checkbox class=\"slider\">Slider checkbox</sui-checkbox>\n        </div>\n        <div class=\"field\">\n            <sui-checkbox class=\"toggle\">Toggle checkbox</sui-checkbox>\n        </div>\n    </div>\n</div>\n<div class=\"ui form\">\n    <div class=\"grouped fields\">\n        <label>Radio Button Style Examples</label>\n        <div class=\"field\">\n            <sui-radio-button class=\"slider\" name=\"styled\" value=\"a\" [(ngModel)]=\"eStyledRadio\">\n                Slider radio button\n            </sui-radio-button>\n        </div>\n        <div class=\"field\">\n            <sui-radio-button class=\"toggle\" name=\"styled\" value=\"b\" [(ngModel)]=\"eStyledRadio\">\n                Toggle radio button\n            </sui-radio-button>\n        </div>\n    </div>\n</div>\n`;\nexport let CheckboxPage = /*#__PURE__*/(() => {\n  var _class;\n  class CheckboxPage {\n    constructor() {\n      this.api = [{\n        selector: \"<sui-checkbox>\",\n        properties: [{\n          name: \"name\",\n          type: \"string\",\n          description: \"Sets the name on the internal <code>&lt;input&gt;</code> element.\"\n        }, {\n          name: \"ngModel\",\n          type: \"boolean\",\n          description: \"Bind the checkbox value to the value of the provided variable.\"\n        }, {\n          name: \"isDisabled\",\n          type: \"boolean\",\n          description: \"Sets whether or not the checkbox is disabled (UI only).\",\n          defaultValue: \"false\"\n        }, {\n          name: \"isReadonly\",\n          type: \"boolean\",\n          description: \"Sets whether or not the checkbox is read-only (UI only).\",\n          defaultValue: \"false\"\n        }],\n        events: [{\n          name: \"ngModelChange\",\n          type: \"boolean\",\n          description: \"Fires whenever the checkbox check is changed. <code>[(ngModel)]</code> syntax is supported.\"\n        }, {\n          name: \"checkChange\",\n          type: \"boolean\",\n          description: \"Fires whenever the checkbox check is changed.\"\n        }]\n      }, {\n        selector: \"<sui-radio-button>\",\n        properties: [{\n          name: \"name\",\n          type: \"string\",\n          description: \"Sets the name on the internal <code>&lt;input&gt;</code> component.\",\n          required: true\n        }, {\n          name: \"value\",\n          type: \"T\",\n          description: \"Sets the value that selecting this radio button returns. Supports binding any object.\",\n          required: true\n        }, {\n          name: \"ngModel\",\n          type: \"T\",\n          description: \"Bind the radio button value to the value of the provided variable.\"\n        }, {\n          name: \"isDisabled\",\n          type: \"boolean\",\n          description: \" Sets whether or not the radio button is disabled (UI only).\",\n          defaultValue: \"false\"\n        }, {\n          name: \"isReadonly\",\n          type: \"boolean\",\n          description: \"Sets whether or not the radio button is read-only (UI only).\",\n          defaultValue: \"false\"\n        }],\n        events: [{\n          name: \"ngModelChange\",\n          type: \"T\",\n          description: \"Fires whenever the radio button check is changed. <code>[(ngModel)]</code> syntax is supported.\"\n        }, {\n          name: \"currentValueChange\",\n          type: \"T\",\n          description: \"Fires whenever the radio button check is changed.\"\n        }]\n      }];\n      this.exampleStandardTemplate = exampleStandardTemplate;\n      this.exampleRadioButtonTemplate = exampleRadioButtonTemplate;\n      this.exampleStyledTemplate = exampleStyledTemplate;\n    }\n  }\n  _class = CheckboxPage;\n  _class.ɵfac = function CheckboxPage_Factory(t) {\n    return new (t || _class)();\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"demo-page-checkbox\"]],\n    decls: 36,\n    vars: 4,\n    consts: [[\"header\", \"\"], [\"sub-header\", \"\"], [1, \"ui\", \"dividing\", \"header\"], [3, \"code\"], [\"info\", \"\"], [1, \"ui\", \"header\"], [\"result\", \"\"], [\"id\", \"api\", 1, \"ui\", \"dividing\", \"header\"], [3, \"api\"]],\n    template: function CheckboxPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"demo-page-title\")(1, \"div\", 0);\n        i0.ɵɵtext(2, \"Checkbox\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"p\");\n        i0.ɵɵtext(5, \"A checkbox allows a user to select a value from a small set of options, often binary\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"demo-page-content\")(7, \"h2\", 2);\n        i0.ɵɵtext(8, \"Examples\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"demo-example\", 3)(10, \"div\", 4)(11, \"h4\", 5);\n        i0.ɵɵtext(12, \"Checkbox\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14, \"A standard checkbox\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 6);\n        i0.ɵɵelement(16, \"example-checkbox-standard\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"demo-example\", 3)(18, \"div\", 4)(19, \"h4\", 5);\n        i0.ɵɵtext(20, \"Radio button\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"p\");\n        i0.ɵɵtext(22, \"A standard radio button\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 6);\n        i0.ɵɵelement(24, \"example-checkbox-radio-button\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"demo-example\", 3)(26, \"div\", 4)(27, \"h4\", 5);\n        i0.ɵɵtext(28, \"Styled variations\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"p\");\n        i0.ɵɵtext(30, \"Checkboxes and Radio Buttons can be styled\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 6);\n        i0.ɵɵelement(32, \"example-checkbox-styled\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"h2\", 7);\n        i0.ɵɵtext(34, \"API\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"demo-api\", 8);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"code\", ctx.exampleStandardTemplate);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"code\", ctx.exampleRadioButtonTemplate);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"code\", ctx.exampleStyledTemplate);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"api\", ctx.api);\n      }\n    },\n    encapsulation: 2\n  });\n  return CheckboxPage;\n})();\nexport let CheckboxExampleStandard = /*#__PURE__*/(() => {\n  var _class2;\n  class CheckboxExampleStandard {\n    constructor() {\n      this.eCheck = true;\n    }\n  }\n  _class2 = CheckboxExampleStandard;\n  _class2.ɵfac = function CheckboxExampleStandard_Factory(t) {\n    return new (t || _class2)();\n  };\n  _class2.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class2,\n    selectors: [[\"example-checkbox-standard\"]],\n    decls: 16,\n    vars: 6,\n    consts: [[1, \"ui\", \"form\"], [1, \"grouped\", \"fields\"], [1, \"field\"], [3, \"ngModel\", \"isDisabled\", \"isReadonly\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"]],\n    template: function CheckboxExampleStandard_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\");\n        i0.ɵɵtext(3, \"Checkbox Example\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"sui-checkbox\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function CheckboxExampleStandard_Template_sui_checkbox_ngModelChange_5_listener($event) {\n          return ctx.eCheck = $event;\n        });\n        i0.ɵɵtext(6, \" An example checkbox \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"sui-checkbox\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CheckboxExampleStandard_Template_sui_checkbox_ngModelChange_8_listener($event) {\n          return ctx.eCheckDisabled = $event;\n        });\n        i0.ɵɵtext(9, \"1st checkbox disabled?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"sui-checkbox\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CheckboxExampleStandard_Template_sui_checkbox_ngModelChange_11_listener($event) {\n          return ctx.eCheckReadonly = $event;\n        });\n        i0.ɵɵtext(12, \"1st checkbox read-only?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 2)(14, \"sui-checkbox\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CheckboxExampleStandard_Template_sui_checkbox_ngModelChange_14_listener($event) {\n          return ctx.eCheck = $event;\n        });\n        i0.ɵɵtext(15, \"Mirrors value of 1st checkbox\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.eCheck)(\"isDisabled\", ctx.eCheckDisabled)(\"isReadonly\", ctx.eCheckReadonly);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.eCheckDisabled);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.eCheckReadonly);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.eCheck);\n      }\n    },\n    encapsulation: 2\n  });\n  return CheckboxExampleStandard;\n})();\nexport let CheckboxExampleRadioButton = /*#__PURE__*/(() => {\n  var _class3;\n  class CheckboxExampleRadioButton {\n    constructor() {\n      this.eRadio = \"world\";\n    }\n  }\n  _class3 = CheckboxExampleRadioButton;\n  _class3.ɵfac = function CheckboxExampleRadioButton_Factory(t) {\n    return new (t || _class3)();\n  };\n  _class3.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class3,\n    selectors: [[\"example-checkbox-radio-button\"]],\n    decls: 19,\n    vars: 10,\n    consts: [[1, \"ui\", \"form\"], [1, \"grouped\", \"fields\"], [1, \"field\"], [\"name\", \"example\", \"value\", \"hello\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"example\", \"value\", \"world\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"example\", \"value\", \"example\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"example\", 3, \"value\", \"ngModel\", \"ngModelChange\"]],\n    template: function CheckboxExampleRadioButton_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\");\n        i0.ɵɵtext(3, \"Radio Button Example\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"sui-radio-button\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function CheckboxExampleRadioButton_Template_sui_radio_button_ngModelChange_5_listener($event) {\n          return ctx.eRadio = $event;\n        });\n        i0.ɵɵtext(6, \"Value: \\\"hello\\\"\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"sui-radio-button\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CheckboxExampleRadioButton_Template_sui_radio_button_ngModelChange_8_listener($event) {\n          return ctx.eRadio = $event;\n        });\n        i0.ɵɵtext(9, \"Value: \\\"world\\\"\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"sui-radio-button\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function CheckboxExampleRadioButton_Template_sui_radio_button_ngModelChange_11_listener($event) {\n          return ctx.eRadio = $event;\n        });\n        i0.ɵɵtext(12, \"Value: \\\"example\\\"\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 2)(14, \"sui-radio-button\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function CheckboxExampleRadioButton_Template_sui_radio_button_ngModelChange_14_listener($event) {\n          return ctx.eRadio = $event;\n        });\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(16, \"p\");\n        i0.ɵɵtext(17);\n        i0.ɵɵpipe(18, \"json\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.eRadio);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.eRadio);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.eRadio);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"value\", i0.ɵɵpureFunction0(9, _c0))(\"ngModel\", ctx.eRadio);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" Value: \", \"{\", \" example: \\\"object\\\" } \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"The currently selected value is \", i0.ɵɵpipeBind1(18, 7, ctx.eRadio), \"\");\n      }\n    },\n    encapsulation: 2\n  });\n  return CheckboxExampleRadioButton;\n})();\nexport let CheckboxExampleStyled = /*#__PURE__*/(() => {\n  var _class4;\n  class CheckboxExampleStyled {}\n  _class4 = CheckboxExampleStyled;\n  _class4.ɵfac = function CheckboxExampleStyled_Factory(t) {\n    return new (t || _class4)();\n  };\n  _class4.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class4,\n    selectors: [[\"example-checkbox-styled\"]],\n    decls: 20,\n    vars: 2,\n    consts: [[1, \"ui\", \"form\"], [1, \"grouped\", \"fields\"], [1, \"field\"], [1, \"slider\"], [1, \"toggle\"], [\"name\", \"styled\", \"value\", \"a\", 1, \"slider\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"styled\", \"value\", \"b\", 1, \"toggle\", 3, \"ngModel\", \"ngModelChange\"]],\n    template: function CheckboxExampleStyled_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\");\n        i0.ɵɵtext(3, \"Checkbox Style Examples\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"sui-checkbox\", 3);\n        i0.ɵɵtext(6, \"Slider checkbox\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 2)(8, \"sui-checkbox\", 4);\n        i0.ɵɵtext(9, \"Toggle checkbox\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(10, \"div\", 0)(11, \"div\", 1)(12, \"label\");\n        i0.ɵɵtext(13, \"Radio Button Style Examples\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 2)(15, \"sui-radio-button\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function CheckboxExampleStyled_Template_sui_radio_button_ngModelChange_15_listener($event) {\n          return ctx.eStyledRadio = $event;\n        });\n        i0.ɵɵtext(16, \" Slider radio button \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 2)(18, \"sui-radio-button\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function CheckboxExampleStyled_Template_sui_radio_button_ngModelChange_18_listener($event) {\n          return ctx.eStyledRadio = $event;\n        });\n        i0.ɵɵtext(19, \" Toggle radio button \");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngModel\", ctx.eStyledRadio);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.eStyledRadio);\n      }\n    },\n    encapsulation: 2\n  });\n  return CheckboxExampleStyled;\n})();\nexport const CheckboxPageComponents = [CheckboxPage, CheckboxExampleStandard, CheckboxExampleRadioButton, CheckboxExampleStyled];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}