{"ast":null,"code":"import _asyncToGenerator from \"C:/temp/ng2-semantic-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nfunction SelectExampleStandard_sui_select_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sui-select-option\", 8);\n  }\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r4);\n  }\n}\nfunction SelectExampleStandard_sui_select_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sui-select-option\", 8);\n  }\n  if (rf & 2) {\n    const option_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r5);\n  }\n}\nfunction SelectExampleVariations_sui_select_option_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sui-select-option\", 19);\n  }\n  if (rf & 2) {\n    const o_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", o_r2);\n  }\n}\nfunction SelectExampleInMenuSearch_sui_select_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sui-select-option\", 10);\n  }\n  if (rf & 2) {\n    const o_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", o_r2);\n  }\n}\nfunction SelectExampleTemplate_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 8);\n    i0.ɵɵtext(1);\n  }\n  if (rf & 2) {\n    const option_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", option_r6.name, \" \");\n  }\n}\nfunction SelectExampleTemplate_sui_select_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sui-select-option\", 9);\n  }\n  if (rf & 2) {\n    const o_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", o_r7);\n  }\n}\nfunction SelectExampleTemplate_sui_select_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sui-select-option\", 9);\n  }\n  if (rf & 2) {\n    const o_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", o_r8);\n  }\n}\nfunction SelectExampleLookupSearch_sui_select_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"sui-select-option\", 4);\n  }\n  if (rf & 2) {\n    const o_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", o_r2);\n  }\n}\nconst exampleStandardTemplate = `\n<div class=\"ui segments\">\n    <div class=\"ui segment\">\n        <p>Single Select (with <code>selection</code> class applied)</p>\n        <sui-select class=\"selection\"\n                    [(ngModel)]=\"selectedOption\"\n                    [options]=\"options\"\n                    labelField=\"name\"\n                    [isSearchable]=\"searchable\"\n                    [isDisabled]=\"disabled\"\n                    #select>\n            <sui-select-option *ngFor=\"let option of select.filteredOptions\"\n                               [value]=\"option\">\n            </sui-select-option>\n        </sui-select>\n    </div>\n    <div class=\"ui segment\">\n        <p>Multi Select (with <code>selection</code> class applied)</p>\n        <sui-multi-select class=\"selection\"\n                          [(ngModel)]=\"selectedOptions\"\n                          [options]=\"options\"\n                          labelField=\"name\"\n                          [isSearchable]=\"searchable\"\n                          [isDisabled]=\"disabled\"\n                          [hasLabels]=\"!hideLabels\"\n                          #multiSelect>\n            <sui-select-option *ngFor=\"let option of multiSelect.filteredOptions\"\n                               [value]=\"option\">\n            </sui-select-option>\n        </sui-multi-select>\n        <br><br>\n        <sui-checkbox [(ngModel)]=\"hideLabels\">Hide labels?</sui-checkbox>\n    </div>\n    <div class=\"ui segment\">\n        <sui-checkbox [(ngModel)]=\"searchable\">Searchable?</sui-checkbox>\n        <br>\n        <sui-checkbox [(ngModel)]=\"disabled\">Disabled?</sui-checkbox>\n        \n    </div>\n    <div class=\"ui segment\">\n        <p>Singly selected: {{ selectedOption | json }}</p>\n        <p>Multi selected: {{ selectedOptions | json }}</p>\n    </div>\n</div>\n`;\nconst exampleVariationsTemplate = `\n<div class=\"ui segments\">\n    <div class=\"ui segment\">\n        <p><strong>Basic</strong></p>\n        <sui-select placeholder=\"Choose\">\n            <sui-select-option value=\"Option 1\"></sui-select-option>\n            <sui-select-option value=\"Option 2\"></sui-select-option>\n            <sui-select-option value=\"Option 3\"></sui-select-option>\n            <sui-select-option value=\"Option 4\"></sui-select-option>\n        </sui-select>\n    </div>\n    <div class=\"ui segment\">\n        <p><strong>Inline</strong></p>\n        <h4 class=\"ui header\">\n            <i class=\"trophy icon\"></i>\n            <div class=\"content\">\n                Trending repos\n                <sui-select class=\"inline\" [(ngModel)]=\"selectedRange\">\n                    <div class=\"header\">Adjust time span</div>\n                    <sui-select-option value=\"today\"></sui-select-option>\n                    <sui-select-option value=\"this week\"></sui-select-option>\n                    <sui-select-option value=\"this month\"></sui-select-option>\n                </sui-select>\n            </div>\n        </h4>\n    </div>\n    <div class=\"ui segment\">\n        <p><strong>Button</strong></p>\n        <sui-select class=\"floating labeled icon button\"\n                    icon=\"filter\"\n                    [options]=\"filters\"\n                    [isSearchable]=\"true\"\n                    placeholder=\"Select Filter\"\n                    #filterSelect>\n            <div class=\"header\">\n                <i class=\"tags icon\"></i>\n                Filter by tag\n            </div>\n            <sui-select-option *ngFor=\"let o of filterSelect.filteredOptions\" [value]=\"o\"></sui-select-option>\n        </sui-select>\n    </div>\n</div>\n`;\nconst exampleInMenuSearchTemplate = `\n<sui-multi-select [(ngModel)]=\"selected\"\n                  [options]=\"options\"\n                  labelField=\"name\"\n                  [maxSelected]=\"5\"\n                  icon=\"list\"\n                  #select>\n    <div class=\"ui icon search input\">\n        <i class=\"search icon\"></i>\n        <input suiSelectSearch type=\"text\" placeholder=\"Search options...\">\n    </div>\n    <div class=\"divider\"></div>\n    <div class=\"header\">\n        <i class=\"list icon\"></i>\n        Options\n    </div>\n    <div class=\"scrolling menu\">\n        <sui-select-option *ngFor=\"let o of select.filteredOptions\" [value]=\"o\"></sui-select-option>\n    </div>\n</sui-multi-select>\n`;\nconst exampleTemplateTemplate = `\n<div class=\"ui segments\">\n    <div class=\"ui segment\">\n        <ng-template let-option #optionTemplate>\n            <i class=\"child icon\"></i>{{ option.name }}\n        </ng-template>\n        <p><strong>Template</strong></p>\n        <p>Note: You must still provide a <code>labelField</code> to support searching.</p>\n        <sui-select class=\"selection\"\n                    [(ngModel)]=\"selectedOption\"\n                    [options]=\"options\"\n                    labelField=\"name\"\n                    [optionTemplate]=\"optionTemplate\"\n                    [isSearchable]=\"true\"\n                    #templated>\n            <sui-select-option *ngFor=\"let o of templated.filteredOptions\" [value]=\"o\"></sui-select-option>\n        </sui-select>\n    </div>\n    <div class=\"ui segment\">\n        <p><strong>Formatter</strong></p>\n        <sui-select class=\"selection\"\n                    [(ngModel)]=\"selectedOption\"\n                    [options]=\"options\"\n                    [optionFormatter]=\"formatter\"\n                    #formatted>\n            <sui-select-option *ngFor=\"let o of formatted.filteredOptions\" [value]=\"o\"></sui-select-option>\n        </sui-select>\n    </div>\n    <div class=\"ui segment\">\n        <p>Selected: {{ selectedOption | json }}</p>\n    </div>\n</div>\n`;\nconst exampleSearchLookupTemplate = `\n<sui-select class=\"selection\"\n            [(ngModel)]=\"selectedOption\"\n            [optionsLookup]=\"optionsLookup\"\n            labelField=\"name\"\n            valueField=\"id\"\n            [isSearchable]=\"true\"\n            #searchSelect>\n    <sui-select-option *ngFor=\"let o of searchSelect.filteredOptions\" [value]=\"o\"></sui-select-option>\n</sui-select>\n<div class=\"ui segment\">\n    <p>Currently selected: {{ selectedOption | json }}</p>\n</div>\n`;\nexport let SelectPage = /*#__PURE__*/(() => {\n  var _class;\n  class SelectPage {\n    constructor() {\n      this.api = [{\n        selector: \"<sui-select>\",\n        properties: [{\n          name: \"placeholder\",\n          type: \"string\",\n          description: \"Sets the placeholder string on the search box.\",\n          defaultValue: \"Select one\"\n        }, {\n          name: \"options\",\n          type: \"T[]\",\n          description: \"Sets the options available to the select component. \" + \"Cannot be used in conjunction with <code>optionsLookup</code>.\"\n        }, {\n          name: \"optionsFilter\",\n          type: \"(options:T[], query:string) => T[] | false\",\n          description: \"A function to filter the provided options with a custom function. \" + \"Return <code>false</code> to keep the current options. \" + \"Cannot be used in conjunction with <code>optionsLookup</code>.\"\n        }, {\n          name: \"optionsLookup\",\n          type: \"(query:string, initial?:U) => Promise<T[]>\",\n          description: \"A function to asynchronously transform the provided query string into the array of options. \" + \"Must return a <code>Promise</code>. \" + \"This must be defined as an arrow function in your class.\"\n        }, {\n          name: \"labelField\",\n          type: \"string\",\n          description: \"Sets the property name that is used as a label for each option. \" + \"Supports dot notation for nested properties.\"\n        }, {\n          name: \"valueField\",\n          type: \"string\",\n          description: \"Sets the property name that is used to bind to ngModel. Leaving this \" + \"blank uses the entire object. Supports dot notation for nested properties.\"\n        }, {\n          name: \"isDisabled\",\n          type: \"boolean\",\n          description: \"Sets whether or not the select is disabled\",\n          defaultValue: \"false\"\n        }, {\n          name: \"isSearchable\",\n          type: \"boolean\",\n          description: \"Sets whether the multi select is searchable.\",\n          defaultValue: \"false\"\n        }, {\n          name: \"optionFormatter\",\n          type: \"(result:T, query?:string) => string\",\n          description: \"A function to format a given result and query (if searchable) into a string to be displayed. \" + \"HTML markup is supported.\"\n        }, {\n          name: \"optionTemplate\",\n          type: \"TemplateRef<IOptionContext>\",\n          description: \"Sets the template to use when displaying an option.\"\n        }, {\n          name: \"ngModel\",\n          type: \"T\",\n          description: \"Bind the selected option to the value of the provided variable.\"\n        }, {\n          name: \"icon\",\n          type: \"string\",\n          description: \"Sets the icon used in the select.\",\n          defaultValue: \"dropdown\"\n        }, {\n          name: \"transition\",\n          type: \"string\",\n          description: \"Sets the transition used when displaying the filtered options.\",\n          defaultValue: \"slide down\"\n        }, {\n          name: \"transitionDuration\",\n          type: \"number\",\n          description: \"Sets the duration for the filtered options transition.\",\n          defaultValue: \"200\"\n        }, {\n          name: \"localeOverrides\",\n          type: \"RecursivePartial<ISearchLocaleValues>\",\n          description: \"Overrides the values from the localization service.\"\n        }],\n        events: [{\n          name: \"selectedOptionChange\",\n          type: \"T\",\n          description: \"Fires whenever the selected option is changed. The selected option is passed as <code>$event</code>.\"\n        }, {\n          name: \"ngModelChange\",\n          type: \"T\",\n          description: \"Fires whenever the selected option is changed. <code>[(ngModel)]</code> syntax is supported.\"\n        }]\n      }, {\n        selector: \"<sui-multi-select>\",\n        properties: [{\n          name: \"placeholder\",\n          type: \"string\",\n          description: \"Sets the placeholder string on the search box.\",\n          defaultValue: \"Select...\"\n        }, {\n          name: \"options\",\n          type: \"T[]\",\n          description: \"Sets the options available to the multi select component. \" + \"Cannot be used in conjunction with <code>optionsLookup</code>.\"\n        }, {\n          name: \"optionsFilter\",\n          type: \"(options:T[], query:string) => T[] | false\",\n          description: \"A function to filter the provided options with a custom function. \" + \"Return <code>false</code> to keep the current options. \" + \"Cannot be used in conjunction with <code>optionsLookup</code>.\"\n        }, {\n          name: \"optionsLookup\",\n          type: \"(query:string, initial?:U) => Promise<T[]>\",\n          description: \"A function to asynchronously transform the provided query string into the array of options. \" + \"Must return a <code>Promise</code>. \" + \"This must be defined as an arrow function in your class.\"\n        }, {\n          name: \"labelField\",\n          type: \"string\",\n          description: \"Sets the property name that is used as a label for each option. \" + \"Supports dot notation for nested properties.\"\n        }, {\n          name: \"valueField\",\n          type: \"string\",\n          description: \"Sets the property name that is used to bind to ngModel. Leaving this \" + \"blank uses the entire object. Supports dot notation for nested properties.\"\n        }, {\n          name: \"isDisabled\",\n          type: \"boolean\",\n          description: \"Sets whether or not the multi select is disabled\",\n          defaultValue: \"false\"\n        }, {\n          name: \"isSearchable\",\n          type: \"boolean\",\n          description: \"Sets whether the multi select is searchable.\",\n          defaultValue: \"false\"\n        }, {\n          name: \"hasLabels\",\n          type: \"boolean\",\n          description: \"Sets whether the multi select uses labels.\",\n          defaultValue: \"true\"\n        }, {\n          name: \"maxSelected\",\n          type: \"number\",\n          description: \"Sets the maximum number of values that can be selected at any one time.\"\n        }, {\n          name: \"optionFormatter\",\n          type: \"(result:T, query?:string) => string\",\n          description: \"A function to format a given result and query (if searchable) into a string to be displayed. \" + \"HTML markup is supported.\"\n        }, {\n          name: \"optionTemplate\",\n          type: \"TemplateRef<IOptionContext>\",\n          description: \"Sets the template to use when displaying an option.\"\n        }, {\n          name: \"ngModel\",\n          type: \"T[]\",\n          description: \"Bind the selected options to the value of the provided variable.\"\n        }, {\n          name: \"icon\",\n          type: \"string\",\n          description: \"Sets the icon used in the multi select.\",\n          defaultValue: \"dropdown\"\n        }, {\n          name: \"transition\",\n          type: \"string\",\n          description: \"Sets the transition used when displaying the filtered options.\",\n          defaultValue: \"slide down\"\n        }, {\n          name: \"transitionDuration\",\n          type: \"number\",\n          description: \"Sets the duration for the filtered options transition.\",\n          defaultValue: \"200\"\n        }, {\n          name: \"localeOverrides\",\n          type: \"Partial<ISearchLocaleValues>\",\n          description: \"Overrides the values from the localization service.\"\n        }],\n        events: [{\n          name: \"selectedOptionsChange\",\n          type: \"T[]\",\n          description: \"Fires whenever the selected options are changed. The selected options are passed as <code>$event</code>.\"\n        }, {\n          name: \"ngModelChange\",\n          type: \"T[]\",\n          description: \"Fires whenever the selected options are changed. <code>[(ngModel)]</code> syntax is supported.\"\n        }]\n      }, {\n        selector: \"<sui-select-option>\",\n        properties: [{\n          name: \"value\",\n          type: \"T\",\n          description: \"Sets the value of the option.\",\n          required: true\n        }]\n      }, {\n        selector: \"[suiSelectSearch]\"\n      }];\n      this.exampleStandardTemplate = exampleStandardTemplate;\n      this.exampleVariationsTemplate = exampleVariationsTemplate;\n      this.exampleInMenuSearchTemplate = exampleInMenuSearchTemplate;\n      this.exampleTemplateTemplate = exampleTemplateTemplate;\n      this.formatterCode = `\npublic formatter(option:IOption, query?:string):string {\n    return \\`name: \"\\${option.name}\"\\`;\n}\n`;\n      this.exampleSearchLookupTemplate = exampleSearchLookupTemplate;\n      this.searchLookupCode = `\ntype LookupFn<T, U> = (query:string, initial?:U) => Promise<T> | Promise<T[]>\n\n// Example option interface:\ninterface IOption {\n    id:number; // valueField is 'id' so \\`U\\` is \\`number\\`\n    name:string\n}\n\n// Lookup function structure:\nlet lookupFn:LookupFn<IOption, number> = (query, initial?) => {\n    if (initial != undefined) {\n        // Return a promise that resolves with the specified initial item.\n    }\n    // Return a promise that resolves with a list of query results.\n}\n`;\n    }\n  }\n  _class = SelectPage;\n  _class.ɵfac = function SelectPage_Factory(t) {\n    return new (t || _class)();\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"demo-page-select\"]],\n    decls: 118,\n    vars: 10,\n    consts: [[\"header\", \"\"], [\"sub-header\", \"\"], [1, \"ui\", \"dividing\", \"header\"], [3, \"code\"], [\"info\", \"\"], [1, \"ui\", \"header\"], [\"result\", \"\"], [1, \"info\", 3, \"isDismissable\"], [1, \"header\"], [1, \"ui\", \"segment\"], [\"language\", \"typescript\", 3, \"src\"], [\"routerLink\", \"/behaviors/localization\"], [\"id\", \"api\", 1, \"ui\", \"dividing\", \"header\"], [3, \"api\"]],\n    template: function SelectPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"demo-page-title\")(1, \"div\", 0);\n        i0.ɵɵtext(2, \"Select\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"p\");\n        i0.ɵɵtext(5, \"A select allows a user to select one or more values from a series of values\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"demo-page-content\")(7, \"h2\", 2);\n        i0.ɵɵtext(8, \"Examples\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"demo-example\", 3)(10, \"div\", 4)(11, \"h4\", 5);\n        i0.ɵɵtext(12, \"Selection\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14, \"A select can be used to select between choices in a form\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 6)(16, \"p\");\n        i0.ɵɵtext(17, \"Full keyboard navigation is supported.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"example-select-standard\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"sui-message\", 7)(20, \"div\", 8);\n        i0.ɵɵtext(21, \"Important Note\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"p\");\n        i0.ɵɵtext(23, \" The select component is unusual in the fact that it requires you to manually provide the options within. This is so that you can customise the menu, adding headers and dividers etc. as in Semantic UI. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25, \" However, it means that in order to always display the correct options, you \");\n        i0.ɵɵelementStart(26, \"strong\");\n        i0.ɵɵtext(27, \"must\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(28, \" bind your \");\n        i0.ɵɵelementStart(29, \"code\");\n        i0.ɵɵtext(30, \"*ngFor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(31, \" to the \");\n        i0.ɵɵelementStart(32, \"code\");\n        i0.ɵɵtext(33, \"filteredOptions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(34, \" property on the select. This is shown in each of the examples. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(35, \"br\");\n        i0.ɵɵelementStart(36, \"demo-example\", 3)(37, \"div\", 4)(38, \"h4\", 5);\n        i0.ɵɵtext(39, \"Variations\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"p\");\n        i0.ɵɵtext(41, \"Selects allow a great deal of customization\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(42, \"example-select-variations\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"demo-example\", 3)(44, \"div\", 4)(45, \"h4\", 5);\n        i0.ɵɵtext(46, \"Search In-Menu\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"p\");\n        i0.ɵɵtext(48, \"A select can include a search prompt inside its menu\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(49, \"div\", 6);\n        i0.ɵɵelement(50, \"example-select-in-menu-search\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(51, \"demo-example\", 3)(52, \"div\", 4)(53, \"h4\", 5);\n        i0.ɵɵtext(54, \"Templates & Formatters\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"p\");\n        i0.ɵɵtext(56, \"You can use a custom template or formatter for displaying each option\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(57, \"div\", 6);\n        i0.ɵɵelement(58, \"example-select-template\")(59, \"br\");\n        i0.ɵɵelementStart(60, \"p\");\n        i0.ɵɵtext(61, \"This is the formatter used in the above example:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"div\", 9);\n        i0.ɵɵelement(63, \"demo-codeblock\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(64, \"demo-example\", 3)(65, \"div\", 4)(66, \"h4\", 5);\n        i0.ɵɵtext(67, \"Remote Lookup\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"p\");\n        i0.ɵɵtext(69, \"A select can allow a user to search through a list of choices from an API\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(70, \"div\", 6);\n        i0.ɵɵelement(71, \"example-select-search-lookup\")(72, \"br\");\n        i0.ɵɵelementStart(73, \"p\");\n        i0.ɵɵtext(74, \"Remote lookups are facilitied by a lookup function of type \");\n        i0.ɵɵelementStart(75, \"code\");\n        i0.ɵɵtext(76, \"LookupFn<T, U>\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(77, \".\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(78, \"p\")(79, \"code\");\n        i0.ɵɵtext(80, \"T\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(81, \" is the type of each option, and \");\n        i0.ɵɵelementStart(82, \"code\");\n        i0.ɵɵtext(83, \"U\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(84, \" is the type of the property specified by \");\n        i0.ɵɵelementStart(85, \"code\");\n        i0.ɵɵtext(86, \"valueField\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(87, \" (default is \");\n        i0.ɵɵelementStart(88, \"code\");\n        i0.ɵɵtext(89, \"T\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(90, \" if no \");\n        i0.ɵɵelementStart(91, \"code\");\n        i0.ɵɵtext(92, \"valueField\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(93, \" specified). \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(94, \"div\", 9);\n        i0.ɵɵelement(95, \"demo-codeblock\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(96, \"p\");\n        i0.ɵɵtext(97, \" For multi selects, the \");\n        i0.ɵɵelementStart(98, \"code\");\n        i0.ɵɵtext(99, \"initial\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(100, \" argument is of type \");\n        i0.ɵɵelementStart(101, \"code\");\n        i0.ɵɵtext(102, \"U[]\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(103, \", and the lookup function always returns a \");\n        i0.ɵɵelementStart(104, \"code\");\n        i0.ɵɵtext(105, \"Promise<T>\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(106, \". \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(107, \"sui-message\", 7)(108, \"div\", 8);\n        i0.ɵɵtext(109, \"Localization\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(110, \"p\");\n        i0.ɵɵtext(111, \" The select component has full localization support. Read the \");\n        i0.ɵɵelementStart(112, \"a\", 11);\n        i0.ɵɵtext(113, \"localization docs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(114, \" for guidance. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(115, \"h2\", 12);\n        i0.ɵɵtext(116, \"API\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(117, \"demo-api\", 13);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"code\", ctx.exampleStandardTemplate);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"isDismissable\", false);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"code\", ctx.exampleVariationsTemplate);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"code\", ctx.exampleInMenuSearchTemplate);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"code\", ctx.exampleTemplateTemplate);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"src\", ctx.formatterCode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"code\", ctx.exampleSearchLookupTemplate);\n        i0.ɵɵadvance(31);\n        i0.ɵɵproperty(\"src\", ctx.searchLookupCode);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"isDismissable\", false);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"api\", ctx.api);\n      }\n    },\n    encapsulation: 2\n  });\n  return SelectPage;\n})();\nconst options = [\"Example\", \"Test\", \"What\", \"No\", \"Benefit\", \"Oranges\", \"Artemis\", \"Another\", \"Apples\", \"Foo\", \"Bar\"];\nconst namedOptions = options.map(name => ({\n  name\n}));\nconst idOptions = namedOptions.map(({\n  name\n}, id) => ({\n  name,\n  id\n}));\nexport let SelectExampleStandard = /*#__PURE__*/(() => {\n  var _class2;\n  class SelectExampleStandard {\n    constructor() {\n      this.options = namedOptions;\n      this.searchable = false;\n      this.disabled = false;\n      this.hideLabels = false;\n    }\n  }\n  _class2 = SelectExampleStandard;\n  _class2.ɵfac = function SelectExampleStandard_Factory(t) {\n    return new (t || _class2)();\n  };\n  _class2.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class2,\n    selectors: [[\"example-select-standard\"]],\n    decls: 36,\n    vars: 20,\n    consts: [[1, \"ui\", \"segments\"], [1, \"ui\", \"segment\"], [\"labelField\", \"name\", 1, \"selection\", 3, \"ngModel\", \"options\", \"isSearchable\", \"isDisabled\", \"ngModelChange\"], [\"select\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"labelField\", \"name\", 1, \"selection\", 3, \"ngModel\", \"options\", \"isSearchable\", \"isDisabled\", \"hasLabels\", \"ngModelChange\"], [\"multiSelect\", \"\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\"]],\n    template: function SelectExampleStandard_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\");\n        i0.ɵɵtext(3, \"Single Select (with \");\n        i0.ɵɵelementStart(4, \"code\");\n        i0.ɵɵtext(5, \"selection\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6, \" class applied)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"sui-select\", 2, 3);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectExampleStandard_Template_sui_select_ngModelChange_7_listener($event) {\n          return ctx.selectedOption = $event;\n        });\n        i0.ɵɵtemplate(9, SelectExampleStandard_sui_select_option_9_Template, 1, 1, \"sui-select-option\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 1)(11, \"p\");\n        i0.ɵɵtext(12, \"Multi Select (with \");\n        i0.ɵɵelementStart(13, \"code\");\n        i0.ɵɵtext(14, \"selection\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(15, \" class applied)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"sui-multi-select\", 5, 6);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectExampleStandard_Template_sui_multi_select_ngModelChange_16_listener($event) {\n          return ctx.selectedOptions = $event;\n        });\n        i0.ɵɵtemplate(18, SelectExampleStandard_sui_select_option_18_Template, 1, 1, \"sui-select-option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"br\")(20, \"br\");\n        i0.ɵɵelementStart(21, \"sui-checkbox\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectExampleStandard_Template_sui_checkbox_ngModelChange_21_listener($event) {\n          return ctx.hideLabels = $event;\n        });\n        i0.ɵɵtext(22, \"Hide labels?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 1)(24, \"sui-checkbox\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectExampleStandard_Template_sui_checkbox_ngModelChange_24_listener($event) {\n          return ctx.searchable = $event;\n        });\n        i0.ɵɵtext(25, \"Searchable?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"br\");\n        i0.ɵɵelementStart(27, \"sui-checkbox\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectExampleStandard_Template_sui_checkbox_ngModelChange_27_listener($event) {\n          return ctx.disabled = $event;\n        });\n        i0.ɵɵtext(28, \"Disabled?\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"div\", 1)(30, \"p\");\n        i0.ɵɵtext(31);\n        i0.ɵɵpipe(32, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"p\");\n        i0.ɵɵtext(34);\n        i0.ɵɵpipe(35, \"json\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(8);\n        const _r2 = i0.ɵɵreference(17);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedOption)(\"options\", ctx.options)(\"isSearchable\", ctx.searchable)(\"isDisabled\", ctx.disabled);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", _r0.filteredOptions);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedOptions)(\"options\", ctx.options)(\"isSearchable\", ctx.searchable)(\"isDisabled\", ctx.disabled)(\"hasLabels\", !ctx.hideLabels);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", _r2.filteredOptions);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.hideLabels);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchable);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.disabled);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Singly selected: \", i0.ɵɵpipeBind1(32, 16, ctx.selectedOption), \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Multi selected: \", i0.ɵɵpipeBind1(35, 18, ctx.selectedOptions), \"\");\n      }\n    },\n    encapsulation: 2\n  });\n  return SelectExampleStandard;\n})();\nexport let SelectExampleVariations = /*#__PURE__*/(() => {\n  var _class3;\n  class SelectExampleVariations {\n    constructor() {\n      this.selectedRange = \"today\";\n      this.filters = [\"Important\", \"Announcement\", \"Discussion\"];\n    }\n  }\n  _class3 = SelectExampleVariations;\n  _class3.ɵfac = function SelectExampleVariations_Factory(t) {\n    return new (t || _class3)();\n  };\n  _class3.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class3,\n    selectors: [[\"example-select-variations\"]],\n    decls: 34,\n    vars: 4,\n    consts: [[1, \"ui\", \"segments\"], [1, \"ui\", \"segment\"], [\"placeholder\", \"Choose\"], [\"value\", \"Option 1\"], [\"value\", \"Option 2\"], [\"value\", \"Option 3\"], [\"value\", \"Option 4\"], [1, \"ui\", \"header\"], [1, \"trophy\", \"icon\"], [1, \"content\"], [1, \"inline\", 3, \"ngModel\", \"ngModelChange\"], [1, \"header\"], [\"value\", \"today\"], [\"value\", \"this week\"], [\"value\", \"this month\"], [\"icon\", \"filter\", \"placeholder\", \"Select Filter\", 1, \"floating\", \"labeled\", \"icon\", \"button\", 3, \"options\", \"isSearchable\"], [\"filterSelect\", \"\"], [1, \"tags\", \"icon\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function SelectExampleVariations_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\")(3, \"strong\");\n        i0.ɵɵtext(4, \"Basic\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"sui-select\", 2);\n        i0.ɵɵelement(6, \"sui-select-option\", 3)(7, \"sui-select-option\", 4)(8, \"sui-select-option\", 5)(9, \"sui-select-option\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 1)(11, \"p\")(12, \"strong\");\n        i0.ɵɵtext(13, \"Inline\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"h4\", 7);\n        i0.ɵɵelement(15, \"i\", 8);\n        i0.ɵɵelementStart(16, \"div\", 9);\n        i0.ɵɵtext(17, \" Trending repos \");\n        i0.ɵɵelementStart(18, \"sui-select\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectExampleVariations_Template_sui_select_ngModelChange_18_listener($event) {\n          return ctx.selectedRange = $event;\n        });\n        i0.ɵɵelementStart(19, \"div\", 11);\n        i0.ɵɵtext(20, \"Adjust time span\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"sui-select-option\", 12)(22, \"sui-select-option\", 13)(23, \"sui-select-option\", 14);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(24, \"div\", 1)(25, \"p\")(26, \"strong\");\n        i0.ɵɵtext(27, \"Button\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"sui-select\", 15, 16)(30, \"div\", 11);\n        i0.ɵɵelement(31, \"i\", 17);\n        i0.ɵɵtext(32, \" Filter by tag \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(33, SelectExampleVariations_sui_select_option_33_Template, 1, 1, \"sui-select-option\", 18);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(29);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedRange);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"options\", ctx.filters)(\"isSearchable\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", _r0.filteredOptions);\n      }\n    },\n    encapsulation: 2\n  });\n  return SelectExampleVariations;\n})();\nexport let SelectExampleInMenuSearch = /*#__PURE__*/(() => {\n  var _class4;\n  class SelectExampleInMenuSearch {\n    constructor() {\n      this.options = namedOptions;\n      this.selected = [namedOptions[0], namedOptions[5]];\n    }\n  }\n  _class4 = SelectExampleInMenuSearch;\n  _class4.ɵfac = function SelectExampleInMenuSearch_Factory(t) {\n    return new (t || _class4)();\n  };\n  _class4.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class4,\n    selectors: [[\"example-select-in-menu-search\"]],\n    decls: 11,\n    vars: 4,\n    consts: [[\"labelField\", \"name\", \"icon\", \"list\", 3, \"ngModel\", \"options\", \"maxSelected\", \"ngModelChange\"], [\"select\", \"\"], [1, \"ui\", \"icon\", \"search\", \"input\"], [1, \"search\", \"icon\"], [\"suiSelectSearch\", \"\", \"type\", \"text\", \"placeholder\", \"Search options...\"], [1, \"divider\"], [1, \"header\"], [1, \"list\", \"icon\"], [1, \"scrolling\", \"menu\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function SelectExampleInMenuSearch_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"sui-multi-select\", 0, 1);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectExampleInMenuSearch_Template_sui_multi_select_ngModelChange_0_listener($event) {\n          return ctx.selected = $event;\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelement(3, \"i\", 3)(4, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵelement(7, \"i\", 7);\n        i0.ɵɵtext(8, \" Options \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 8);\n        i0.ɵɵtemplate(10, SelectExampleInMenuSearch_sui_select_option_10_Template, 1, 1, \"sui-select-option\", 9);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.selected)(\"options\", ctx.options)(\"maxSelected\", 5);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", _r0.filteredOptions);\n      }\n    },\n    encapsulation: 2\n  });\n  return SelectExampleInMenuSearch;\n})();\nexport let SelectExampleTemplate = /*#__PURE__*/(() => {\n  var _class5;\n  class SelectExampleTemplate {\n    constructor() {\n      this.options = namedOptions;\n      this.selectedOption = this.options[5];\n    }\n    formatter(option, query) {\n      return `name: '${option.name}'`;\n    }\n  }\n  _class5 = SelectExampleTemplate;\n  _class5.ɵfac = function SelectExampleTemplate_Factory(t) {\n    return new (t || _class5)();\n  };\n  _class5.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class5,\n    selectors: [[\"example-select-template\"]],\n    decls: 26,\n    vars: 12,\n    consts: [[1, \"ui\", \"segments\"], [1, \"ui\", \"segment\"], [\"optionTemplate\", \"\"], [\"labelField\", \"name\", 1, \"selection\", 3, \"ngModel\", \"options\", \"optionTemplate\", \"isSearchable\", \"ngModelChange\"], [\"templated\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"selection\", 3, \"ngModel\", \"options\", \"optionFormatter\", \"ngModelChange\"], [\"formatted\", \"\"], [1, \"child\", \"icon\"], [3, \"value\"]],\n    template: function SelectExampleTemplate_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, SelectExampleTemplate_ng_template_2_Template, 2, 1, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(4, \"p\")(5, \"strong\");\n        i0.ɵɵtext(6, \"Template\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"p\");\n        i0.ɵɵtext(8, \"Note: You must still provide a \");\n        i0.ɵɵelementStart(9, \"code\");\n        i0.ɵɵtext(10, \"labelField\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(11, \" to support searching.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"sui-select\", 3, 4);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectExampleTemplate_Template_sui_select_ngModelChange_12_listener($event) {\n          return ctx.selectedOption = $event;\n        });\n        i0.ɵɵtemplate(14, SelectExampleTemplate_sui_select_option_14_Template, 1, 1, \"sui-select-option\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"p\")(17, \"strong\");\n        i0.ɵɵtext(18, \"Formatter\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"sui-select\", 6, 7);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectExampleTemplate_Template_sui_select_ngModelChange_19_listener($event) {\n          return ctx.selectedOption = $event;\n        });\n        i0.ɵɵtemplate(21, SelectExampleTemplate_sui_select_option_21_Template, 1, 1, \"sui-select-option\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 1)(23, \"p\");\n        i0.ɵɵtext(24);\n        i0.ɵɵpipe(25, \"json\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(3);\n        const _r2 = i0.ɵɵreference(13);\n        const _r4 = i0.ɵɵreference(20);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedOption)(\"options\", ctx.options)(\"optionTemplate\", _r0)(\"isSearchable\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", _r2.filteredOptions);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedOption)(\"options\", ctx.options)(\"optionFormatter\", ctx.formatter);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", _r4.filteredOptions);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Selected: \", i0.ɵɵpipeBind1(25, 10, ctx.selectedOption), \"\");\n      }\n    },\n    encapsulation: 2\n  });\n  return SelectExampleTemplate;\n})();\nexport let SelectExampleLookupSearch = /*#__PURE__*/(() => {\n  var _class6;\n  class SelectExampleLookupSearch {\n    constructor() {\n      var _this = this;\n      this._options = idOptions;\n      this.selectedOption = this._options[3][\"id\"];\n      this.optionsLookup = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (query, initial) {\n          if (initial != undefined) {\n            return new Promise(resolve => setTimeout(() => resolve(_this._options.find(item => item.id === initial)), 500));\n          }\n          let regex;\n          try {\n            regex = new RegExp(query, \"i\");\n          } catch (e) {\n            regex = query;\n          }\n          return new Promise(resolve => setTimeout(() => resolve(_this._options.filter(item => item.name.match(regex))), 500));\n        });\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n  }\n  _class6 = SelectExampleLookupSearch;\n  _class6.ɵfac = function SelectExampleLookupSearch_Factory(t) {\n    return new (t || _class6)();\n  };\n  _class6.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class6,\n    selectors: [[\"example-select-search-lookup\"]],\n    decls: 7,\n    vars: 7,\n    consts: [[\"labelField\", \"name\", \"valueField\", \"id\", 1, \"selection\", 3, \"ngModel\", \"optionsLookup\", \"isSearchable\", \"ngModelChange\"], [\"searchSelect\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"ui\", \"segment\"], [3, \"value\"]],\n    template: function SelectExampleLookupSearch_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"sui-select\", 0, 1);\n        i0.ɵɵlistener(\"ngModelChange\", function SelectExampleLookupSearch_Template_sui_select_ngModelChange_0_listener($event) {\n          return ctx.selectedOption = $event;\n        });\n        i0.ɵɵtemplate(2, SelectExampleLookupSearch_sui_select_option_2_Template, 1, 1, \"sui-select-option\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"p\");\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"json\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedOption)(\"optionsLookup\", ctx.optionsLookup)(\"isSearchable\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", _r0.filteredOptions);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Currently selected: \", i0.ɵɵpipeBind1(6, 5, ctx.selectedOption), \"\");\n      }\n    },\n    encapsulation: 2\n  });\n  return SelectExampleLookupSearch;\n})();\nexport const SelectPageComponents = [SelectPage, SelectExampleStandard, SelectExampleVariations, SelectExampleInMenuSearch, SelectExampleTemplate, SelectExampleLookupSearch];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}