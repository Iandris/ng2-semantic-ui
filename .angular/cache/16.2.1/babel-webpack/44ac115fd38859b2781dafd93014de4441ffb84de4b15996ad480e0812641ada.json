{"ast":null,"code":"import _asyncToGenerator from \"C:/temp/ng2-semantic-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class2;\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar SearchExampleStandard_1;\nvar _a, _b;\nimport { Component } from \"@angular/core\";\nimport { SuiModalService } from \"ng2-semantic-ui\";\nimport { AlertModal } from \"../../../modals/alert.modal\";\nimport * as i0 from \"@angular/core\";\nconst exampleStandardTemplate = `\n<sui-search placeholder=\"Example Search...\"\n            [hasIcon]=\"hasIcon\"\n            [options]=\"options\"\n            [searchDelay]=\"0\"\n            (resultSelected)=\"alertSelected($event)\"></sui-search>\n\n<div class=\"ui segment\">\n    <sui-checkbox [(ngModel)]=\"hasIcon\">Has icon?</sui-checkbox>\n</div>\n`;\nconst exampleRemoteTemplate = `\n<sui-search [optionsLookup]=\"optionsSearch\"\n            optionsField=\"title\"\n            (resultSelected)=\"last = $event\"></sui-search>\n\n<div class=\"ui segment\">\n    <p>Last selected: {{ last | json }}</p>\n</div>\n`;\nconst exampleTemplateTemplate = `\n<ng-template let-result let-query=\"query\" #template>\n    {{ result.title }} ({{ result.index }})\n</ng-template>\n<sui-search [options]=\"options\"\n            optionsField=\"title\"\n            [resultTemplate]=\"template\"\n            [retainSelectedResult]=\"false\"\n            (resultSelected)=\"alert($event.title)\"></sui-search>\n`;\nexport let SearchPage = /*#__PURE__*/(() => {\n  var _class;\n  class SearchPage {\n    constructor() {\n      this.api = [{\n        selector: \"<sui-search>\",\n        properties: [{\n          name: \"placeholder\",\n          type: \"string\",\n          description: \"Sets the placeholder string on the search box.\",\n          defaultValue: \"Search...\"\n        }, {\n          name: \"hasIcon\",\n          type: \"boolean\",\n          description: \"Sets whether or not the search displays an icon.\",\n          defaultValue: \"true\"\n        }, {\n          name: \"options\",\n          type: \"T[]\",\n          description: \"Sets the options available to the search component. \" + \"Cannot be used in conjunction with <code>optionsLookup</code>.\"\n        }, {\n          name: \"optionsFilter\",\n          type: \"(options:T[], query:string) => T[] | false\",\n          description: \"A function to filter the provided options with a custom function. \" + \"Return <code>false</code> to keep the current options. \" + \"Cannot be used in conjunction with <code>optionsLookup</code>.\"\n        }, {\n          name: \"optionsLookup\",\n          type: \"(query:string) => Promise<T[]>\",\n          description: \"A function to asynchronously transform the provided query string into the array of results. \" + \"Must return a <code>Promise</code>. \" + \"This must be defined as an arrow function in your class.\"\n        }, {\n          name: \"optionsField\",\n          type: \"string\",\n          description: \"Sets the property name that the search element uses to lookup and \" + \"display each option. Supports dot notation for nested properties.\"\n        }, {\n          name: \"resultFormatter\",\n          type: \"(result:T, query:string) => string\",\n          description: \"A function to format a given result and query into a string to be displayed. \" + \"HTML markup is supported.\"\n        }, {\n          name: \"resultTemplate\",\n          type: \"TemplateRef<IResultContext>\",\n          description: \"Sets the template to use when displaying a result.\"\n        }, {\n          name: \"searchDelay\",\n          type: \"number\",\n          description: \"Sets the amount of time in milliseconds to wait after the last keypress before running a search.\",\n          defaultValue: \"200\"\n        }, {\n          name: \"maxResults\",\n          type: \"number\",\n          description: \"Sets the maximum number of results the search displays at once.\",\n          defaultValue: \"7\"\n        }, {\n          name: \"retainSelectedResult\",\n          type: \"boolean\",\n          description: \"Sets whether the search should retain a result in the input box after it is selected.\",\n          defaultValue: \"true\"\n        }, {\n          name: \"transition\",\n          type: \"string\",\n          description: \"Sets the transition used when displaying the search results.\",\n          defaultValue: \"scale\"\n        }, {\n          name: \"transitionDuration\",\n          type: \"number\",\n          description: \"Sets the duration for the search results transition.\",\n          defaultValue: \"200\"\n        }, {\n          name: \"localeOverrides\",\n          type: \"Partial<ISearchLocaleValues>\",\n          description: \"Overrides the values from the localization service.\"\n        }],\n        events: [{\n          name: \"resultSelected\",\n          type: \"T\",\n          description: \"Fires whenever the search's selected result is changed. \" + \"The selected result is passed as <code>$event</code>.\"\n        }]\n      }];\n      this.exampleStandardTemplate = exampleStandardTemplate;\n      this.exampleRemoteTemplate = exampleRemoteTemplate;\n      this.exampleTemplateTemplate = exampleTemplateTemplate;\n    }\n  }\n  _class = SearchPage;\n  _class.ɵfac = function SearchPage_Factory(t) {\n    return new (t || _class)();\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"demo-page-search\"]],\n    decls: 43,\n    vars: 5,\n    consts: [[\"header\", \"\"], [\"sub-header\", \"\"], [1, \"ui\", \"dividing\", \"header\"], [3, \"code\"], [\"info\", \"\"], [1, \"ui\", \"header\"], [\"result\", \"\"], [1, \"info\", 3, \"isDismissable\"], [1, \"header\"], [\"routerLink\", \"/behaviors/localization\"], [\"id\", \"api\", 1, \"ui\", \"dividing\", \"header\"], [3, \"api\"]],\n    template: function SearchPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"demo-page-title\")(1, \"div\", 0);\n        i0.ɵɵtext(2, \"Search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"p\");\n        i0.ɵɵtext(5, \"A search module allows a user to query for results from a selection of data\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"demo-page-content\")(7, \"h2\", 2);\n        i0.ɵɵtext(8, \"Examples\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"demo-example\", 3)(10, \"div\", 4)(11, \"h4\", 5);\n        i0.ɵɵtext(12, \"Local\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14, \"A search can display a set of local results\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 6);\n        i0.ɵɵelement(16, \"example-search-standard\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"demo-example\", 3)(18, \"div\", 4)(19, \"h4\", 5);\n        i0.ɵɵtext(20, \"Remote\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"p\");\n        i0.ɵɵtext(22, \"A search can display a set of remote results\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 6);\n        i0.ɵɵelement(24, \"example-search-remote\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"demo-example\", 3)(26, \"div\", 4)(27, \"h4\", 5);\n        i0.ɵɵtext(28, \"Template\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"p\");\n        i0.ɵɵtext(30, \"A search can display results using a template\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(31, \"example-search-template\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"sui-message\", 7)(33, \"div\", 8);\n        i0.ɵɵtext(34, \"Localization\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"p\");\n        i0.ɵɵtext(36, \" The search component has full localization support. Read the \");\n        i0.ɵɵelementStart(37, \"a\", 9);\n        i0.ɵɵtext(38, \"localization docs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(39, \" for guidance. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"h2\", 10);\n        i0.ɵɵtext(41, \"API\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"demo-api\", 11);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"code\", ctx.exampleStandardTemplate);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"code\", ctx.exampleRemoteTemplate);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"code\", ctx.exampleTemplateTemplate);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"isDismissable\", false);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"api\", ctx.api);\n      }\n    },\n    encapsulation: 2\n  });\n  return SearchPage;\n})();\nexport let SearchExampleStandard = (_class2 = class SearchExampleStandard {\n  get options() {\n    return SearchExampleStandard_1.standardOptions;\n  }\n  constructor(modalService) {\n    this.modalService = modalService;\n    this.hasIcon = true;\n  }\n  alertSelected(selectedItem) {\n    this.modalService.open(new AlertModal(`You chose '${selectedItem}'!`));\n  }\n}, SearchExampleStandard_1 = _class2, _class2.standardOptions = [\"Apple\", \"Bird\", \"Car\", \"Dog\", \"Elephant\", \"Finch\", \"Gate\", \"Horrify\", \"Indigo\", \"Jelly\", \"Keep\", \"Lemur\", \"Manifest\", \"None\", \"Orange\", \"Peel\", \"Quest\", \"Resist\", \"Suspend\", \"Terrify\", \"Underneath\", \"Violet\", \"Water\", \"Xylophone\", \"Yellow\", \"Zebra\"], _class2);\nSearchExampleStandard = SearchExampleStandard_1 = __decorate([Component({\n  selector: \"example-search-standard\",\n  template: exampleStandardTemplate\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof SuiModalService !== \"undefined\" && SuiModalService) === \"function\" ? _a : Object])], SearchExampleStandard);\nexport let SearchExampleRemote = class SearchExampleRemote extends SearchExampleStandard {\n  optionsSearch(query) {\n    return _asyncToGenerator(function* () {\n      const options = SearchExampleStandard.standardOptions.map(o => ({\n        title: o\n      }));\n      return new Promise(resolve => {\n        const results = options.filter(o => o.title.slice(0, query.length).toLowerCase() === query.toLowerCase());\n        setTimeout(() => resolve(results), 300);\n      });\n    })();\n  }\n};\nSearchExampleRemote = __decorate([Component({\n  selector: \"example-search-remote\",\n  template: exampleRemoteTemplate\n})], SearchExampleRemote);\nexport let SearchExampleTemplate = class SearchExampleTemplate {\n  constructor(modalService) {\n    this.modalService = modalService;\n    this.options = SearchExampleStandard.standardOptions.map((o, i) => ({\n      title: o,\n      index: i\n    }));\n  }\n  alert(selectedItem) {\n    this.modalService.open(new AlertModal(`You chose '${selectedItem}'!`));\n  }\n};\nSearchExampleTemplate = __decorate([Component({\n  selector: \"example-search-template\",\n  template: exampleTemplateTemplate\n}), __metadata(\"design:paramtypes\", [typeof (_b = typeof SuiModalService !== \"undefined\" && SuiModalService) === \"function\" ? _b : Object])], SearchExampleTemplate);\nexport const SearchPageComponents = [SearchPage, SearchExampleStandard, SearchExampleRemote, SearchExampleTemplate];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}