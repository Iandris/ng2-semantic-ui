{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst exampleStandardTemplate = `\n<div class=\"ui segment\">\n    <h4 class=\"ui header\">Example segment</h4>\n    <sui-dimmer [(isDimmed)]=\"isDimmed\" [isClickable]=\"isClickable\">\n        <h4 class=\"ui inverted header\">I can have content too!</h4>\n    </sui-dimmer>\n    <p>Some random content for the example segment.</p>\n    <p>Some more content!.</p>\n</div>\n<button class=\"ui primary button\" (click)=\"isDimmed = !isDimmed\">Toggle Dimmer</button>\n<sui-checkbox [(ngModel)]=\"isClickable\">Click to close?</sui-checkbox>\n`;\nconst exampleVariationsTemplate = `\n<div class=\"ui segment\">\n    <sui-dimmer class=\"page\" [(isDimmed)]=\"pageDimmed\">\n        <h2 class=\"ui inverted icon header\">\n            <i class=\"heart icon\"></i>\n            The page has been dimmed!\n        </h2>\n    </sui-dimmer>\n    <sui-dimmer class=\"inverted\" [(isDimmed)]=\"segmentDimmed\">\n        <div class=\"ui text loader\">Enables loading screens!</div>\n    </sui-dimmer>\n    <p>Page dimmers and inverted dimmers are possible!</p>\n    <button class=\"ui primary button\" (click)=\"pageDimmed = !pageDimmed\">Dim Page</button>\n    <button class=\"ui primary button\" (click)=\"segmentDimmed = !segmentDimmed\">Dim Segment</button>\n</div>\n`;\nexport let DimmerPage = /*#__PURE__*/(() => {\n  var _class;\n  class DimmerPage {\n    constructor() {\n      this.api = [{\n        selector: \"<sui-dimmer>\",\n        properties: [{\n          name: \"isDimmed\",\n          type: \"boolean\",\n          description: \"Sets whether or not the dimmer is active.\",\n          defaultValue: \"false\"\n        }, {\n          name: \"isClickable\",\n          type: \"boolean\",\n          description: \"Sets whether or not clicking the dimmer will dismiss it.\",\n          defaultValue: \"true\"\n        }, {\n          name: \"transition\",\n          type: \"string\",\n          description: \"Sets the transition used when displaying the dimmer.\",\n          defaultValue: \"fade\"\n        }, {\n          name: \"transitionDuration\",\n          type: \"number\",\n          description: \"Sets the duration for the dimmer transition.\",\n          defaultValue: \"300\"\n        }],\n        events: [{\n          name: \"isDimmedChange\",\n          type: \"boolean\",\n          description: \"Fires whenever the dimmer is toggled. \" + \"Use the <code>[(isDimmed)]</code> syntax to update when the user clicks out of the dimmer.\"\n        }]\n      }];\n      this.exampleStandardTemplate = exampleStandardTemplate;\n      this.exampleVariationsTemplate = exampleVariationsTemplate;\n    }\n  }\n  _class = DimmerPage;\n  _class.ɵfac = function DimmerPage_Factory(t) {\n    return new (t || _class)();\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"demo-page-dimmer\"]],\n    decls: 26,\n    vars: 3,\n    consts: [[\"header\", \"\"], [\"sub-header\", \"\"], [1, \"ui\", \"dividing\", \"header\"], [3, \"code\"], [\"info\", \"\"], [1, \"ui\", \"header\"], [\"result\", \"\"], [\"id\", \"api\", 1, \"ui\", \"dividing\", \"header\"], [3, \"api\"]],\n    template: function DimmerPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"demo-page-title\")(1, \"div\", 0);\n        i0.ɵɵtext(2, \"Dimmer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"p\");\n        i0.ɵɵtext(5, \"A dimmer hides distractions to focus attention on particular content\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"demo-page-content\")(7, \"h2\", 2);\n        i0.ɵɵtext(8, \"Examples\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"demo-example\", 3)(10, \"div\", 4)(11, \"h4\", 5);\n        i0.ɵɵtext(12, \"Dimmer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14, \"A simple dimmer displays no content\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(15, \"example-dimmer-standard\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"demo-example\", 3)(17, \"div\", 4)(18, \"h4\", 5);\n        i0.ɵɵtext(19, \"Variations\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"p\");\n        i0.ɵɵtext(21, \"Adding classes to the dimmer enables variations\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(22, \"example-dimmer-variations\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"h2\", 7);\n        i0.ɵɵtext(24, \"API\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"demo-api\", 8);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"code\", ctx.exampleStandardTemplate);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"code\", ctx.exampleVariationsTemplate);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"api\", ctx.api);\n      }\n    },\n    encapsulation: 2\n  });\n  return DimmerPage;\n})();\nexport let DimmerExampleStandard = /*#__PURE__*/(() => {\n  var _class2;\n  class DimmerExampleStandard {\n    constructor() {\n      this.isClickable = true;\n    }\n  }\n  _class2 = DimmerExampleStandard;\n  _class2.ɵfac = function DimmerExampleStandard_Factory(t) {\n    return new (t || _class2)();\n  };\n  _class2.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class2,\n    selectors: [[\"example-dimmer-standard\"]],\n    decls: 14,\n    vars: 3,\n    consts: [[1, \"ui\", \"segment\"], [1, \"ui\", \"header\"], [3, \"isDimmed\", \"isClickable\", \"isDimmedChange\"], [1, \"ui\", \"inverted\", \"header\"], [1, \"ui\", \"primary\", \"button\", 3, \"click\"], [3, \"ngModel\", \"ngModelChange\"]],\n    template: function DimmerExampleStandard_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n        i0.ɵɵtext(2, \"Example segment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"sui-dimmer\", 2);\n        i0.ɵɵlistener(\"isDimmedChange\", function DimmerExampleStandard_Template_sui_dimmer_isDimmedChange_3_listener($event) {\n          return ctx.isDimmed = $event;\n        });\n        i0.ɵɵelementStart(4, \"h4\", 3);\n        i0.ɵɵtext(5, \"I can have content too!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵtext(7, \"Some random content for the example segment.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9, \"Some more content!.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function DimmerExampleStandard_Template_button_click_10_listener() {\n          return ctx.isDimmed = !ctx.isDimmed;\n        });\n        i0.ɵɵtext(11, \"Toggle Dimmer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"sui-checkbox\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function DimmerExampleStandard_Template_sui_checkbox_ngModelChange_12_listener($event) {\n          return ctx.isClickable = $event;\n        });\n        i0.ɵɵtext(13, \"Click to close?\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"isDimmed\", ctx.isDimmed)(\"isClickable\", ctx.isClickable);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.isClickable);\n      }\n    },\n    encapsulation: 2\n  });\n  return DimmerExampleStandard;\n})();\nexport let DimmerExampleVariations = /*#__PURE__*/(() => {\n  var _class3;\n  class DimmerExampleVariations {\n    constructor() {\n      this.isClickable = true;\n    }\n  }\n  _class3 = DimmerExampleVariations;\n  _class3.ɵfac = function DimmerExampleVariations_Factory(t) {\n    return new (t || _class3)();\n  };\n  _class3.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class3,\n    selectors: [[\"example-dimmer-variations\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[1, \"ui\", \"segment\"], [1, \"page\", 3, \"isDimmed\", \"isDimmedChange\"], [1, \"ui\", \"inverted\", \"icon\", \"header\"], [1, \"heart\", \"icon\"], [1, \"inverted\", 3, \"isDimmed\", \"isDimmedChange\"], [1, \"ui\", \"text\", \"loader\"], [1, \"ui\", \"primary\", \"button\", 3, \"click\"]],\n    template: function DimmerExampleVariations_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"sui-dimmer\", 1);\n        i0.ɵɵlistener(\"isDimmedChange\", function DimmerExampleVariations_Template_sui_dimmer_isDimmedChange_1_listener($event) {\n          return ctx.pageDimmed = $event;\n        });\n        i0.ɵɵelementStart(2, \"h2\", 2);\n        i0.ɵɵelement(3, \"i\", 3);\n        i0.ɵɵtext(4, \" The page has been dimmed! \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"sui-dimmer\", 4);\n        i0.ɵɵlistener(\"isDimmedChange\", function DimmerExampleVariations_Template_sui_dimmer_isDimmedChange_5_listener($event) {\n          return ctx.segmentDimmed = $event;\n        });\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵtext(7, \"Enables loading screens!\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"p\");\n        i0.ɵɵtext(9, \"Page dimmers and inverted dimmers are possible!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function DimmerExampleVariations_Template_button_click_10_listener() {\n          return ctx.pageDimmed = !ctx.pageDimmed;\n        });\n        i0.ɵɵtext(11, \"Dim Page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function DimmerExampleVariations_Template_button_click_12_listener() {\n          return ctx.segmentDimmed = !ctx.segmentDimmed;\n        });\n        i0.ɵɵtext(13, \"Dim Segment\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"isDimmed\", ctx.pageDimmed);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"isDimmed\", ctx.segmentDimmed);\n      }\n    },\n    encapsulation: 2\n  });\n  return DimmerExampleVariations;\n})();\nexport const DimmerPageComponents = [DimmerPage, DimmerExampleStandard, DimmerExampleVariations];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}